{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "G1LaNbdf49Z8"
   },
   "source": [
    "## Day 3 Notebook: Module A Intro"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "s-KBDjho5SkY"
   },
   "source": [
    "## Setup of Python Environment\n",
    "For this notebook, we will need a few more modules that are not native to Google Colab. Run the cell below to install these. `rdkit` is a generally useful cheminformatics software. `mordred` is a module that enables calculation of molecular descriptors and pairs well with `rdkit`. `leruli` is a web service that offers real-time structure and property predictions. \n",
    "\n",
    "During the workshop, you may not actually use `mordred` as the calculation of descriptors (there are ~1500) can take awhile for all the molecular structures, but it is worth checking out. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "kYFvVhvO46zX",
    "outputId": "31d81cdb-ca58-429c-e87a-89525630645a",
    "tags": [
     "remove-output"
    ]
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: rdkit-pypi in /opt/anaconda3/lib/python3.8/site-packages (2022.3.2.1)\n",
      "Requirement already satisfied: Pillow in /opt/anaconda3/lib/python3.8/site-packages (from rdkit-pypi) (8.3.1)\n",
      "Requirement already satisfied: numpy in /opt/anaconda3/lib/python3.8/site-packages (from rdkit-pypi) (1.20.3)\n",
      "Requirement already satisfied: leruli in /opt/anaconda3/lib/python3.8/site-packages (22.1.6)\n",
      "Requirement already satisfied: minio in /opt/anaconda3/lib/python3.8/site-packages (from leruli) (7.1.8)\n",
      "Requirement already satisfied: requests in /opt/anaconda3/lib/python3.8/site-packages (from leruli) (2.26.0)\n",
      "Requirement already satisfied: tabulate in /opt/anaconda3/lib/python3.8/site-packages (from leruli) (0.8.9)\n",
      "Requirement already satisfied: docker in /opt/anaconda3/lib/python3.8/site-packages (from leruli) (5.0.3)\n",
      "Requirement already satisfied: tqdm>=4.62.0 in /opt/anaconda3/lib/python3.8/site-packages (from leruli) (4.62.2)\n",
      "Requirement already satisfied: aiobotocore in /opt/anaconda3/lib/python3.8/site-packages (from leruli) (2.3.2)\n",
      "Requirement already satisfied: aiohttp in /opt/anaconda3/lib/python3.8/site-packages (from leruli) (3.8.1)\n",
      "Requirement already satisfied: Click>=7.0 in /opt/anaconda3/lib/python3.8/site-packages (from leruli) (8.0.1)\n",
      "Requirement already satisfied: aioitertools>=0.5.1 in /opt/anaconda3/lib/python3.8/site-packages (from aiobotocore->leruli) (0.10.0)\n",
      "Requirement already satisfied: botocore<1.24.22,>=1.24.21 in /opt/anaconda3/lib/python3.8/site-packages (from aiobotocore->leruli) (1.24.21)\n",
      "Requirement already satisfied: wrapt>=1.10.10 in /opt/anaconda3/lib/python3.8/site-packages (from aiobotocore->leruli) (1.12.1)\n",
      "Requirement already satisfied: async-timeout<5.0,>=4.0.0a3 in /opt/anaconda3/lib/python3.8/site-packages (from aiohttp->leruli) (4.0.2)\n",
      "Requirement already satisfied: yarl<2.0,>=1.0 in /opt/anaconda3/lib/python3.8/site-packages (from aiohttp->leruli) (1.7.2)\n",
      "Requirement already satisfied: charset-normalizer<3.0,>=2.0 in /opt/anaconda3/lib/python3.8/site-packages (from aiohttp->leruli) (2.0.0)\n",
      "Requirement already satisfied: multidict<7.0,>=4.5 in /opt/anaconda3/lib/python3.8/site-packages (from aiohttp->leruli) (6.0.2)\n",
      "Requirement already satisfied: attrs>=17.3.0 in /opt/anaconda3/lib/python3.8/site-packages (from aiohttp->leruli) (21.2.0)\n",
      "Requirement already satisfied: frozenlist>=1.1.1 in /opt/anaconda3/lib/python3.8/site-packages (from aiohttp->leruli) (1.3.0)\n",
      "Requirement already satisfied: aiosignal>=1.1.2 in /opt/anaconda3/lib/python3.8/site-packages (from aiohttp->leruli) (1.2.0)\n",
      "Requirement already satisfied: typing_extensions>=4.0 in /opt/anaconda3/lib/python3.8/site-packages (from aioitertools>=0.5.1->aiobotocore->leruli) (4.2.0)\n",
      "Requirement already satisfied: python-dateutil<3.0.0,>=2.1 in /opt/anaconda3/lib/python3.8/site-packages (from botocore<1.24.22,>=1.24.21->aiobotocore->leruli) (2.8.2)\n",
      "Requirement already satisfied: jmespath<2.0.0,>=0.7.1 in /opt/anaconda3/lib/python3.8/site-packages (from botocore<1.24.22,>=1.24.21->aiobotocore->leruli) (1.0.0)\n",
      "Requirement already satisfied: urllib3<1.27,>=1.25.4 in /opt/anaconda3/lib/python3.8/site-packages (from botocore<1.24.22,>=1.24.21->aiobotocore->leruli) (1.26.6)\n",
      "Requirement already satisfied: six>=1.5 in /opt/anaconda3/lib/python3.8/site-packages (from python-dateutil<3.0.0,>=2.1->botocore<1.24.22,>=1.24.21->aiobotocore->leruli) (1.16.0)\n",
      "Requirement already satisfied: idna>=2.0 in /opt/anaconda3/lib/python3.8/site-packages (from yarl<2.0,>=1.0->aiohttp->leruli) (3.1)\n",
      "Requirement already satisfied: websocket-client>=0.32.0 in /opt/anaconda3/lib/python3.8/site-packages (from docker->leruli) (0.57.0)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in /opt/anaconda3/lib/python3.8/site-packages (from requests->leruli) (2022.5.18.1)\n",
      "Requirement already satisfied: mordred[full] in /opt/anaconda3/lib/python3.8/site-packages (1.2.0)\n",
      "Requirement already satisfied: numpy==1.* in /opt/anaconda3/lib/python3.8/site-packages (from mordred[full]) (1.20.3)\n",
      "Requirement already satisfied: six==1.* in /opt/anaconda3/lib/python3.8/site-packages (from mordred[full]) (1.16.0)\n",
      "Requirement already satisfied: networkx==2.* in /opt/anaconda3/lib/python3.8/site-packages (from mordred[full]) (2.6.2)\n",
      "Requirement already satisfied: tqdm in /opt/anaconda3/lib/python3.8/site-packages (from mordred[full]) (4.62.2)\n",
      "Requirement already satisfied: pandas in /opt/anaconda3/lib/python3.8/site-packages (from mordred[full]) (1.3.2)\n",
      "Requirement already satisfied: python-dateutil>=2.7.3 in /opt/anaconda3/lib/python3.8/site-packages (from pandas->mordred[full]) (2.8.2)\n",
      "Requirement already satisfied: pytz>=2017.3 in /opt/anaconda3/lib/python3.8/site-packages (from pandas->mordred[full]) (2021.1)\n"
     ]
    }
   ],
   "source": [
    "!pip install rdkit-pypi\n",
    "!pip install leruli\n",
    "!pip install 'mordred[full]'\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "id": "L6SmwNPcwNyE",
    "tags": [
     "hide-output"
    ]
   },
   "outputs": [],
   "source": [
    "# Modules\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.spatial.distance import cdist\n",
    "from sklearn.gaussian_process.kernels import RBF\n",
    "from sklearn.gaussian_process   import GaussianProcessRegressor\n",
    "from sklearn import preprocessing\n",
    "import pandas as pd\n",
    "from rdkit import Chem\n",
    "from rdkit.Chem import PandasTools as PT\n",
    "from mordred import Calculator, descriptors\n",
    "from mordred.error import Missing"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "ewu_6ApydqPR"
   },
   "source": [
    "## Activity 1: Understanding Gaussian Process Regression\n",
    "\n",
    "First, let's build some intuition surrounding GPR. We will start by considering *Multivariate Gaussians*, which can be used to describe a set of normally distributed and possibly correlated random variables. Use the cell below to draw a small number of random samples for a two-dimensional Gaussian. We will then plot these random samples in two ways."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 252
    },
    "id": "wsEUw1uB5kdl",
    "outputId": "666ecdac-5325-48eb-c691-8832d250d88c",
    "tags": [
     "hide-output"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "rng = np.random.default_rng() # sets up a random number generator\n",
    "ndim= 2\n",
    "nsamples = 5\n",
    "\n",
    "# define the distribution and draw samples\n",
    "mean=np.zeros(ndim) # zero mean\n",
    "cov =np.array([[1,0.8],[0.8,2]]) # some covariance matrix with correlation present\n",
    "samples = rng.multivariate_normal(mean,cov,nsamples)\n",
    "\n",
    "# for reference, we will generate a ton of samples to visualize the \"true\" distribution\n",
    "x1t,x2t = rng.multivariate_normal(mean,cov,1000000).T\n",
    "fig,ax = plt.subplots(1,2)\n",
    "ax[0].hist2d(x1t,x2t,bins=(100,100),cmap=plt.cm.magma_r)\n",
    "\n",
    "# and we will overlay our samples on top of this\n",
    "mycmap = plt.cm.get_cmap('winter',nsamples)\n",
    "myColors = [mycmap(i/(nsamples-1.)) for i in range(nsamples)]\n",
    "for i,sample in enumerate(samples):\n",
    "  ax[0].plot(sample[0],sample[1],linestyle = 'none', marker = 'x', color = myColors[i],linewidth=5 )\n",
    "ax[0].axis('square')\n",
    "ax[0].set_xlim([-6,6])\n",
    "ax[0].set_ylim([-6,6])\n",
    "\n",
    "# Now we will also represent these same draws by plotting them \n",
    "# as lines connecting the two Gaussian vectors\n",
    "xrvs = [dim/(ndim-1.) for dim in range(ndim)]\n",
    "for i,sample in enumerate(samples):\n",
    "    ax[1].plot(xrvs,sample,linestyle='-',marker = 'x',color=myColors[i],linewidth=2)\n",
    "ax[1].xaxis.set_ticks(xrvs)\n",
    "ax[1].xaxis.set_ticklabels([])    \n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "MyMhctNDwlpN"
   },
   "source": [
    "Now, we let's consider more complex situation: a *30-dimensional* Gaussian. Of course, we will not show the underlying distribution but use the \"line view\" to illustrate the samples. We will choose to represent the covariance as \n",
    "$$k(x_i,x_j) = \\exp \\left[-\\frac{(x_i-x_j)^2}{2} \\right]$$. How does this compare to the covariance from the previous cell?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 252
    },
    "id": "O8LbMs4iwkf9",
    "outputId": "c7aab6f3-2289-41c9-a2ce-b63ae805aaf6",
    "tags": [
     "hide-output"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "def covkernel(xi,xj,l=1.0):\n",
    "    dij= cdist(xi,xj,metric='euclidean') # returns matrix of pairwise distances\n",
    "    return np.exp(-0.5*dij**2/l**2)\n",
    "\n",
    "ndim     = 30\n",
    "nsamples = 5\n",
    "length_scale = 0.1\n",
    "xrvs     = np.linspace(0,1,ndim)[:,np.newaxis]\n",
    "mycmap = plt.cm.get_cmap('gist_rainbow',nsamples)\n",
    "myColors = [mycmap(i/(nsamples-1.)) for i in range(nsamples)]\n",
    "\n",
    "# define the distribution and draw samples\n",
    "mean=np.zeros(ndim) # zero mean\n",
    "cov = covkernel(xrvs,xrvs,l=length_scale) # some covariance matrix with correlation present\n",
    "samples = rng.multivariate_normal(mean,cov,nsamples)\n",
    "\n",
    "# Represent the draws by plotting them \n",
    "# as lines connecting the Gaussian vectors\n",
    "fig,axs = plt.subplots(1)\n",
    "for i,sample in enumerate(samples):\n",
    "    axs.plot(xrvs,sample,linestyle='-',marker = 'x',color=myColors[i],linewidth=2)\n",
    "axs.xaxis.set_ticks(list(xrvs))\n",
    "axs.axes.get_xaxis().set_visible(False)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "YifDjAO3wyVP"
   },
   "source": [
    "### Example GPR with Van der Waals EOS\n",
    "Now, let's see if we can generate a few \"observations,\" and then sample the posterior. Let's assume our true function is something we know, like the Van der Waals equation of state:\n",
    "\n",
    "$$P_r = \\frac{8}{3}\\frac{T_r}{V_r - \\frac{1}{3}}-\\frac{3}{V_r^2}$$\n",
    "\n",
    "To keep this problem in a physically reasonable range, we will suppose $T_r = 0.85$ and examine $V_r$ over the range of 0.5 to 4. In the following, we can include fewer or more observations to illustrate how our uncertainty changes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 269
    },
    "id": "jf7WGZoXwqnX",
    "outputId": "75948402-ce93-4aba-881c-7137e99cc5d4",
    "tags": [
     "hide-output"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "def vdw_P(Tr,Vr):\n",
    "    term1 = 8.*Tr/(3*Vr-1)\n",
    "    term2 = 3.0/(Vr*Vr)\n",
    "    return term1 - term2\n",
    "\n",
    "def make_plot(Vs,Ps,x,y):\n",
    "    fig,axs = plt.subplots(1)\n",
    "    axs.plot(Vs,Ps,linestyle='-',color='k',linewidth=4)\n",
    "    axs.plot(x[:,0],y[:,0],linestyle='none',marker = 'o',color='r',markersize=10)\n",
    "    axs.set_xlim([0,4])\n",
    "    axs.set_ylim([-1.5,2])\n",
    "    return fig,axs\n",
    "\n",
    "def make_plot_posterior(axs,fmean,fp,fm):\n",
    "    axs.fill_between(xs[:,0],fm,fp,alpha = 0.2)\n",
    "    axs.plot(xs,fmean,linestyle='-',color='b',linewidth=4)\n",
    "    return \n",
    "\n",
    "# look at a reasonable range of parameters\n",
    "Tr = 0.85\n",
    "Vmin,Vmax = 0.5,4\n",
    "Vs = np.linspace(Vmin,Vmax,1000)\n",
    "Ps = vdw_P(Tr,Vs)\n",
    "\n",
    "# generate random observations (over slightly smaller interval)\n",
    "nobs = 10\n",
    "x    = Vmin + (Vmax-1-Vmin)*rng.random(nobs) # random samples for V\n",
    "x    = x[:,np.newaxis]\n",
    "y    = vdw_P(Tr,x)\n",
    "yavg = np.mean(y)\n",
    "fig,axs = make_plot(Vs,Ps,x,y)\n",
    "\n",
    "# now generate our test points (denoted *)\n",
    "xs = Vs[:,np.newaxis]\n",
    "\n",
    "# we need to get all of the relevant covariant matrices\n",
    "length  = 0.1\n",
    "kxsx    = covkernel(xs,x,l=length)\n",
    "kxx     = covkernel(x,x,l=length)\n",
    "invkxx  = np.linalg.inv(kxx)\n",
    "kxsxs   = covkernel(xs,xs,l=length)\n",
    "kxxs    = covkernel(x,xs,l=length)\n",
    "\n",
    "# now we can sample the posterior with the following\n",
    "# mean and covariance functions. We will generate a number of samples\n",
    "# and then show a few for representation sake\n",
    "# Note: as a \"prior\" to formulate the mean over our functions, we will use an ideal gas\n",
    "# the observe mean\n",
    "muf   = yavg\n",
    "meanf = muf+kxsx@invkxx@(y-yavg) # <-- differs from common eqns that assume mean = 0\n",
    "covf  = kxsxs - kxsx@invkxx@kxxs\n",
    "nsamples = 500\n",
    "samples  = rng.multivariate_normal(meanf[:,0],covf,nsamples)\n",
    "sample_mean = np.mean(samples,axis=0)\n",
    "sample_std  = np.std(samples,axis=0)\n",
    "mean_plus   = sample_mean + 1*sample_std\n",
    "mean_minus  = sample_mean - 1*sample_std\n",
    "make_plot_posterior(axs,sample_mean,mean_minus,mean_plus)\n",
    "\n",
    "for i,sample in enumerate(samples[:5]):\n",
    "    axs.plot(xs,sample,linestyle='--',color=myColors[i],linewidth=1)\n",
    "    \n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "kiaeWDiHxAuu"
   },
   "source": [
    "The above presumes noise-free observations and also uses a naive formulation scheme with direct sampling to obtain our results. The posterior mean and variance can actually be obtained directly as we will show next. First run the cell below leaving `sigma_n` to be 0 (i.e., noise-free) and compare the results with the previous cell. Then, run again by changing the value of the noise to get a feel for how noisy observations impact the GP.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 269
    },
    "id": "5NSj24wSw48k",
    "outputId": "5463e0cf-dcba-441b-df16-b0abbb65b2bb",
    "tags": [
     "hide-output"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# new targets with noise:\n",
    "sigma_n = 0.0\n",
    "\n",
    "# add noise to previous observations\n",
    "y    = vdw_P(Tr,x) + rng.normal(loc=0,scale=sigma_n,size=nobs)[:,np.newaxis]\n",
    "yavg = np.mean(y)\n",
    "std  = np.std(y)\n",
    "\n",
    "# conventional algorithm\n",
    "length  = 0.1\n",
    "kxsx    = covkernel(xs,x,l=length)\n",
    "kxx     = covkernel(x,x,l=length)\n",
    "kxsxs   = covkernel(xs,xs,l=length)\n",
    "kxxs    = covkernel(x,xs,l=length)\n",
    "\n",
    "#meanf = muf+kxsx@invkxx@(y-yavg) \n",
    "# 1. Cholesky decomposition of K(x,x)\n",
    "L = np.linalg.cholesky(kxx)\n",
    "\n",
    "# 2. Obtain alpha = L.T|(L|y) = L.T/b \n",
    "b     = np.linalg.lstsq(L,y[:,0]-yavg,rcond=None)[0]\n",
    "alpha = np.linalg.lstsq(L.T,b,rcond=None)[0]\n",
    "\n",
    "# 3. Obtain the posterior mean function\n",
    "fmean = yavg + kxxs.T@alpha\n",
    "\n",
    "# 4. obtain posterior variance function\n",
    "v = np.linalg.lstsq(L,kxxs,rcond=None)[0]\n",
    "fvar = np.diag(kxsxs - v.T@v)\n",
    "fstd = np.sqrt(fvar)\n",
    "mean_plus   = fmean + 1*fstd*std\n",
    "mean_minus  = fmean - 1*fstd*std\n",
    "\n",
    "#plotting\n",
    "fig,axs = make_plot(Vs,Ps,x,y)\n",
    "make_plot_posterior(axs,fmean,mean_minus,mean_plus)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "kVrGWlXDx8Ht"
   },
   "source": [
    "### scikit-learn GPR Implementation\n",
    "Now, we will simply repeat the exercise but using built-in functions from `scikit-learn` to do the GPR. There are many other python packages that support GPR. `scikit-learn` provides a good and simple GPR implementation, but if one desires more advanced capabilities, customizability, and performance -- another package may be preferred."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 269
    },
    "id": "gmun-I7AxDg-",
    "outputId": "8e61b051-98d6-4a2e-cf22-29fd5a7fbf44",
    "tags": [
     "hide-output"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "the_kernel = RBF(length_scale=0.1,length_scale_bounds=\"fixed\")\n",
    "the_model  = GaussianProcessRegressor(kernel=the_kernel)\n",
    "the_model.fit(x,y)\n",
    "fmean,fstd = the_model.predict(xs,return_std=True)\n",
    "mean_plus   = fmean[:,0] + 1*fstd\n",
    "mean_minus  = fmean[:,0] - 1*fstd\n",
    "\n",
    "# plotting\n",
    "fig,axs = make_plot(Vs,Ps,x,y)\n",
    "make_plot_posterior(axs,fmean,mean_minus,mean_plus)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "SAEhxUFRyUnm"
   },
   "source": [
    "Notice that using scikit-learn it presumes that the mean should be zero! This highlights a need that we should probably normalized our data. Recent version of scikit learn allow you to specify whether the data should be normalized during GPR when you build the Regressor. My opinion is that you should handle this yourself so you have a firm idea as to what is happening with your data. We will demonstrate this by using a little bit of preprocessing... "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 304
    },
    "id": "46CYEcHwyQW7",
    "outputId": "9b00e311-83bf-4a77-e4a1-80c06113cf35",
    "tags": [
     "hide-output"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "scaler = preprocessing.StandardScaler().fit(y)\n",
    "yscaled= scaler.transform(y) \n",
    "# to keep the comparison similar to before, we will \n",
    "# also account for scaling to unit standard deviation\n",
    "# newer versions of scikit-learn can use the option with_std = False\n",
    "\n",
    "# fit to transformed y data, then inverse_transform\n",
    "the_kernel = RBF(length_scale=0.1,length_scale_bounds=\"fixed\")\n",
    "the_model  = GaussianProcessRegressor(kernel=the_kernel,normalize_y=False)\n",
    "the_model.fit(x,yscaled)\n",
    "fmeanscaled,fstdscaled = the_model.predict(xs,return_std=True)\n",
    "#print(fstdscaled*scaler.scale_)\n",
    "fstd        = fstdscaled[:,None]*scaler.scale_\n",
    "fmean       = scaler.inverse_transform(fmeanscaled)\n",
    "#mean_plus   = fmean + fstd\n",
    "#mean_minus  = fmean - fstd\n",
    "mean_plus   = scaler.inverse_transform(fmeanscaled + fstdscaled[:,None])\n",
    "mean_minus  = scaler.inverse_transform(fmeanscaled-fstdscaled[:,None])\n",
    "#plotting\n",
    "fig,axs = make_plot(Vs,Ps,x,y)\n",
    "make_plot_posterior(axs,fmean[:,0],mean_minus[:,0],mean_plus[:,0])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "That looks better! In the cell above, we show when building the `GaussianProcessRegressor` how you can specify whether your label should be normalized with the `normalize_y` option. Go ahead and add this flag with `True` to the cell where we unintentionally assumed a zero-mean prior and see how this now compares with the result just generated."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "wejgljPSrAYD"
   },
   "source": [
    "## Team Activity: Active Learning Challenge\n",
    "\n",
    "In this activity, we will deploy *active learning* to identify a molecule that fits some specific target physical property. In specific, we will be working from a pool of molecules that can be found in the ClinTox dataset, which includes a combination of drugs that have failed clinical trials for toxicity reasons as well as drugs that are assocated with successful trials. It is a commonly used dataset for binary classification, but here, we will simply use it as a source for interesting molecular structures. Here is a summary of the challenge:\n",
    "\n",
    "* Our \"design\" task will be to find a molecule that has a specific *boiling temperature*, $T_b$.\n",
    "* Predictions from `leruli` will represent the *ground truth* data on $T_b$ for any molecule\n",
    "* We will start with approximately 50 labeled chemical structures\n",
    "* Gaussian process regression (GPR) will be used as a surrogate model for predicting $T_b$ as a function of molecule chemistry\n",
    "* The molecule chemistry will be represented via chemical descriptors computed by `mordred`; these will be used as inputs for the GPR "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Pre-processing\n",
    "For the workshop, we have done a number of curation and pre-processing steps ahead of time. You can view code relevant to these steps below, but you need not run it. The most time-consuming portion is just running `mordred` to compute all the chemical descriptors for everything within the dataset. At a \"meta\" level, we also needed to exclude a number of chemical structures that were not processible by `leruli`. \n",
    "\n",
    "Relevant files generated pre-workshop:\n",
    "*\n",
    "*\n",
    "*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 434
    },
    "id": "N2lhlM-8yYa_",
    "outputId": "e1db4932-5c89-44a3-f0f4-740412c0395b",
    "tags": [
     "hide-input",
     "hide-output"
    ]
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[20:24:21] Explicit valence for atom # 0 N, 5, is greater than permitted\n",
      "[20:24:21] Can't kekulize mol.  Unkekulized atoms: 9\n",
      "[20:24:21] Explicit valence for atom # 10 N, 4, is greater than permitted\n",
      "[20:24:21] Explicit valence for atom # 10 N, 4, is greater than permitted\n",
      "[20:24:21] Can't kekulize mol.  Unkekulized atoms: 4\n",
      "[20:24:21] Can't kekulize mol.  Unkekulized atoms: 4\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "We initially extract 1478 convertible molecular structures from this dataset.\n"
     ]
    }
   ],
   "source": [
    "# download ClinTox from dmol-book\n",
    "# remove any structures that cannot be converted\n",
    "toxdata = pd.read_csv(\n",
    "    \"https://github.com/whitead/dmol-book/raw/master/data/clintox.csv.gz\"\n",
    ")\n",
    "toxdata.head()\n",
    "PT.AddMoleculeColumnToFrame(toxdata,smilesCol='smiles',includeFingerprints=False)\n",
    "toxdata= toxdata[~toxdata['ROMol'].isnull()] # removes any structures that failed to convert\n",
    "N = len(toxdata)\n",
    "display(PT.FrameToGridImage(toxdata.head(8), molsPerRow=4))\n",
    "toxdata = toxdata.reset_index()\n",
    "print(\"We initially extract {} convertible molecular structures from this dataset.\".format(N))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "qUGdl87_G8vt",
    "outputId": "541b6bd3-5b9a-4641-b85d-ed9f01951239",
    "tags": [
     "hide-output",
     "hide-input"
    ]
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "  2%|▏         | 24/1478 [00:16<28:23,  1.17s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.7/dist-packages/numpy/core/fromnumeric.py:86: RuntimeWarning: overflow encountered in reduce\n",
      "  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "  8%|▊         | 120/1478 [00:57<47:51,  2.11s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.7/dist-packages/numpy/core/fromnumeric.py:86: RuntimeWarning: overflow encountered in reduce\n",
      "  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 1478/1478 [17:12<00:00,  1.43it/s]\n"
     ]
    }
   ],
   "source": [
    "calculator = Calculator(descriptors,ignore_3D=True)\n",
    "wdesc      = calculator.pandas(toxdata['ROMol'])\n",
    "# the below will prune away any descriptors that did not have valid calculations\n",
    "missing = []\n",
    "for column in wdesc.columns:\n",
    "    if (wdesc[column].apply(lambda x: type(x) == Missing)).any():\n",
    "        missing.append(column)\n",
    "wdesc = wdesc.drop(missing,axis=1)\n",
    "wdesc.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "After computing descriptors from Mordred and immediately discarding any descriptors that gave *any* molecule trouble. This takes us from ~1500 descriptors down to around 600. We then further reduce the dimensionality of our prospective inputs by applying versions of a low-variance and high-correlation filters. This leaves us with about 250 descriptors for each molecule, which we write to `filtered.csv` "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "5MkLkRn7SbLE",
    "outputId": "a8eeeeda-6c42-42a6-83ed-55bbee409e3e",
    "tags": [
     "hide-input",
     "remove-output"
    ]
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1478, 599)\n",
      "(1478, 485)\n"
     ]
    }
   ],
   "source": [
    "wdesc2 = wdesc.copy(deep=True)\n",
    "\n",
    "# low variance filter\n",
    "low_var = []\n",
    "for column in wdesc2.columns:\n",
    "  var = wdesc2[column].var()\n",
    "  if (var < 1e-5):\n",
    "    low_var.append(column)\n",
    "  else:\n",
    "    mu = wdesc2[column].mean()\n",
    "    wdesc2[column] = (wdesc2[column]-mu)/var \n",
    "wdesc2 = wdesc2.drop(low_var,axis=1)\n",
    "\n",
    "# greedy high correlation filter\n",
    "corr = wdesc2.corr().to_numpy()\n",
    "np.fill_diagonal(corr,0.0)\n",
    "X = wdesc2.to_numpy()\n",
    "import random\n",
    "random.seed(0)\n",
    "cid = list(range(X.shape[1]))\n",
    "random.shuffle(cid)\n",
    "too_corr = []\n",
    "r_max = 0.9\n",
    "keep = []\n",
    "while cid:\n",
    "  i  = cid.pop(0)\n",
    "  keep.append(i)\n",
    "  corr_i     = corr[i,:]\n",
    "  too_corr_i = np.argwhere(np.abs(corr_i) >= 0.9)\n",
    "  for j in too_corr_i:\n",
    "    try:\n",
    "      too_corr.append(cid.pop(cid.index(j)))\n",
    "    except ValueError:\n",
    "      pass\n",
    "\n",
    "wdesc2 = wdesc2.drop(wdesc2.columns[too_corr],axis=1)\n",
    "wdesc2.to_csv(\"filtered.csv\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Using leruli\n",
    "In active learning, we are typically making measurements iteratively. To mimic taking measurements, we will make calls to `leruli` to grab values of $$T_b$$, which we will treat as the \"ground truth\" label for any given molecule. Examine and run the cell below to understand how to query `leruli` for a physical property using a SMILES representation of the molecular graph. We will use the boiling point as the property; note that the units returned from `leruli` are in Celsius."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "rkGyCLkCO9NK",
    "outputId": "213b2c25-ce25-49ce-ec22-5aac548f0054",
    "tags": [
     "hide-output"
    ]
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "We now have 1376 molecules\n",
      "Here are some boiling points for some molecules:\n",
      "For molecule C(=O)[C@H](CCCCNC(=O)OCCOC)NC(=O)OCCOC\n",
      "  Tb = 537.0 K\n",
      "\n",
      "For molecule [C@@H]1([C@@H]([C@@H]([C@H]([C@@H]([C@@H]1Cl)Cl)Cl)Cl)Cl)Cl\n",
      "  Tb = 509.5 K\n",
      "\n",
      "For molecule [C@H]([C@@H]([C@@H](C(=O)[O-])O)O)([C@H](C(=O)[O-])O)O\n",
      "  Tb = 587.2 K\n",
      "\n",
      "For molecule [H]/[NH+]=C(/C1=CC(=O)/C(=C\\C=c2ccc(=C([NH3+])N)cc2)/C=C1)\\N\n",
      "  Tb = 631.7 K\n",
      "\n",
      "For molecule [H]/[NH+]=C(\\N)/c1ccc(cc1)OCCCCCOc2ccc(cc2)/C(=[NH+]/[H])/N\n",
      "  Tb = 628.8 K\n",
      "\n",
      "For molecule [N+](=O)([O-])[O-]\n",
      "  Tb = 351.3 K\n",
      "\n",
      "For molecule [N]=O\n",
      "  Tb = 298.2 K\n",
      "\n",
      "For molecule [O-]P(=O)([O-])F\n",
      "  Tb = 352.1 K\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import leruli\n",
    "\n",
    "# load in csv with smiles column\n",
    "path2git=\\\n",
    "\"https://raw.githubusercontent.com/webbtheosim/ml-workshop-acsmarm2022/main/site/source/20220603-applied/\"\n",
    "curtox = pd.read_csv(\n",
    "    path2git + \"curated_clintox_smiles.csv\"\n",
    ")[['smiles']]\n",
    "N   = curtox.shape[0]\n",
    "print(\"We now have {} molecules\".format(N))\n",
    "\n",
    "# use leruli to \"measure\" boiling points for a subset\n",
    "m = 8\n",
    "subset = curtox.iloc[0:m,:].copy()\n",
    "PT.AddMoleculeColumnToFrame(subset,smilesCol='smiles',includeFingerprints=False)\n",
    "Tbs = [-1000 for i in range(m)]\n",
    "print(\"Here are some boiling points for some molecules:\")\n",
    "for i,smi in enumerate(subset['smiles'][:]):\n",
    "    Tbs[i] = leruli.graph_to_boiling_point(smi)['bp']+273.15\n",
    "    print(\"For molecule {}\\n  Tb = {:>5.1f} K\\n\".format(smi,Tbs[i]))\n",
    "\n",
    "subset['Tb'] = Tbs\n",
    "display(PT.FrameToGridImage(subset, legendsCol='Tb', molsPerRow=4))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### GPR Kernel\n",
    "\n",
    "Because the mathematics underlying GPR are pretty linear (in a literal sense), perhaps the most critical decision that one makes is the choice of kernel, which describes the covariance amongst random variables. The kernel and its parameters are the *hyperparameters* for GPR.\n",
    "\n",
    "In the active learning paradigm, we will be building potentially many models, so we will write a function that we can use to re-initialize a fresh kernel each time. Familiarize yourself with and run the cell below to implement a kernel of the form\n",
    "\n",
    "$$k(x_i,x_j) = C \\exp \\left[-\\frac{d(x_i,x_j)^2}{2L^2} \\right] + N$$\n",
    "\n",
    "Otherwise, examine the doc pages to implement a different kind of kernel. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {
    "tags": [
     "remove-output"
    ]
   },
   "outputs": [],
   "source": [
    "from scipy.spatial.distance     import pdist,cdist\n",
    "from sklearn.gaussian_process.kernels import RBF, WhiteKernel, ConstantKernel\n",
    "from scipy.optimize             import minimize, minimize_scalar\n",
    "from sklearn.gaussian_process   import GaussianProcessRegressor\n",
    "from scipy.special import erf\n",
    "from sklearn.model_selection  import train_test_split, KFold\n",
    "from sklearn.metrics     import r2_score, mean_squared_error,mean_absolute_error\n",
    "import seaborn as sns\n",
    "import warnings\n",
    "from rdkit import Chem\n",
    "warnings.filterwarnings(\"ignore\")\n",
    "def build_kernel(params):\n",
    "  [C,N,L] = [params[key] for key in ['const','noise','length']]\n",
    "  the_kernel =\\\n",
    "     ConstantKernel(constant_value=C)\\\n",
    "         * RBF(length_scale=L) \\\n",
    "         + WhiteKernel(noise_level=N,noise_level_bounds=(1e-10,1))\n",
    "  return the_kernel"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###  Acquisition functions\n",
    "In active learning, we define an acquisition function that enables us to identify the next \"best\" measurement; the notion of best is obviously subject to change based on the choice of acquisition function. In the cell below, we are going to define to write code to compute two different acquisition functions that we discussed, the **upper confidence bound** and **expected improvement** acquisition functions.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {
    "tags": [
     "remove-output"
    ]
   },
   "outputs": [],
   "source": [
    "#==================================================================\n",
    "#  AUX: eval_UCB\n",
    "#==================================================================\n",
    "# T = target function value\n",
    "# M = mean of model evaluated at x\n",
    "# S = standard deviation of model evaluated at X\n",
    "# E = weighting parameter\n",
    "def eval_UCB(T,M,S,E=0.5):\n",
    "  UCB = M + S*E\n",
    "  return UCB\n",
    "\n",
    "#==================================================================\n",
    "#  AUX: eval_EI\n",
    "#==================================================================\n",
    "# T = target function value\n",
    "# M = mean of model evaluated at x\n",
    "# S = standard deviation of model evaluated at X\n",
    "# E = Xi parameter\n",
    "# cumNrmDist is the cumulative unit normal distribution\n",
    "# NrmDist is the standard normal probability distribution\n",
    "def eval_EI(T,M,S,E=0.01):\n",
    "  dmuT      = M - T - E\n",
    "  dmuTbyS   = dmuT / S\n",
    "  cumNrmDist= 0.5*(1. + erf(dmuTbyS/np.sqrt(2.)))\n",
    "  NrmDist   = np.exp(-0.5*dmuTbyS**2.0)/np.sqrt(2*np.pi)\n",
    "  EI        = dmuT * cumNrmDist + S * NrmDist\n",
    "  return EI"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Data Preparation and Target Definition\n",
    "Examine, modify, and run the cells below to prepare for our challenge! Our goal will be to find a molecule that has a boiling temperature close to 250 K. \n",
    "\n",
    "Critically, we are loading a .csv that has already measured ~50 boiling temperatures for some randomly selected molecules in the ClinTox dataset. In the .csv, points that are labeled with \"-1000\" are currently unknown. \n",
    "\n",
    "Write some code to extract *only the measured data points* and examine how they are distributed. Are there any data points that are currently close to our target?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {
    "tags": [
     "hide-output"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# define our target\n",
    "target = 235  # desired boiling temperature in K\n",
    "\n",
    "# load data\n",
    "y  = pd.read_csv(path2git + \"curated_clintox_Tb_0.csv\").to_numpy()[:,-1][:,None] # array of Tb\n",
    "X  = pd.read_csv(path2git + \"curated_clintox_features.csv\").to_numpy()[:,:]      # array of descriptors\n",
    "yinit = y.copy()\n",
    "Xinit = X.copy()\n",
    "\n",
    "# get scaler for features, X\n",
    "# because our pool of molecules is known a priori and unchanging\n",
    "# we will perform our transformation of input features in consideration\n",
    "# of the whole space -- usually you would just use the training data,\n",
    "# but I do not really see a problem with using all the structures here\n",
    "Xscaler    = preprocessing.StandardScaler().fit(X)\n",
    "X_sc       = Xscaler.transform(X)\n",
    "\n",
    "# find indices with unmeasured boiling points\n",
    "#$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n",
    "nodata = \n",
    "#$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n",
    "\n",
    "# plot distribution of measured boiling temperatures\n",
    "sns.distplot(y[~nodata,:])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Active learning loop\n",
    "In the cell below, we have set up a framework for conducting the active learning exercise. \n",
    "\n",
    "Examine and complete the cell below. While testing you may want to replace the `while` loop with a `for` loop that can only execute one or two times. \n",
    "\n",
    "Are you able to find a suitable target? What fraction of the pool is explored to find this target?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {
    "tags": [
     "remove-output"
    ]
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are currently 50 labeled samples\n",
      "Current closest value to target is 331.2\n",
      "For molecule C(C(CS)S)O\n",
      "  Tb = 443.9 K\n",
      "\n",
      "There are currently 51 labeled samples\n",
      "Current closest value to target is 331.2\n",
      "For molecule CS(=O)C\n",
      "  Tb = 462.2 K\n",
      "\n",
      "There are currently 52 labeled samples\n",
      "Current closest value to target is 331.2\n",
      "For molecule C([C@@H](C(=O)[O-])[NH3+])S\n",
      "  Tb = 407.4 K\n",
      "\n",
      "There are currently 53 labeled samples\n",
      "Current closest value to target is 331.2\n",
      "For molecule [N]=O\n",
      "  Tb = 298.2 K\n",
      "\n",
      "There are currently 54 labeled samples\n",
      "Current closest value to target is 298.2\n",
      "For molecule N(=O)[O-]\n",
      "  Tb = 311.2 K\n",
      "\n",
      "There are currently 55 labeled samples\n",
      "Current closest value to target is 298.2\n",
      "For molecule [Se]\n",
      "  Tb = 321.1 K\n",
      "\n",
      "There are currently 56 labeled samples\n",
      "Current closest value to target is 298.2\n",
      "For molecule Cl[Cu]Cl\n",
      "  Tb = 392.0 K\n",
      "\n",
      "There are currently 57 labeled samples\n",
      "Current closest value to target is 298.2\n",
      "For molecule C#N\n",
      "  Tb = 298.8 K\n",
      "\n",
      "There are currently 58 labeled samples\n",
      "Current closest value to target is 298.2\n",
      "For molecule C(=C(F)F)(F)F\n",
      "  Tb = 197.4 K\n",
      "\n",
      "There are currently 59 labeled samples\n",
      "Current closest value to target is 197.4\n",
      "For molecule C(C(F)(F)F)(C(F)(F)F)(F)F\n",
      "  Tb = 236.6 K\n",
      "\n",
      "There are currently 60 labeled samples\n",
      "Current closest value to target is 236.6\n",
      "\n",
      "\n",
      "We have found a molecule!\n",
      "The boiling point of the best found match is 236.6\n",
      "Here we have it:\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<rdkit.Chem.rdchem.Mol at 0x7fe5227a3e40>"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# best to re-load data in this cell\n",
    "y  = pd.read_csv(path2git + \"curated_clintox_Tb_0.csv\").to_numpy()[:,-1][:,None] # array of Tb\n",
    "X  = pd.read_csv(path2git + \"curated_clintox_features.csv\").to_numpy()[:,:]      # array of descriptors\n",
    "\n",
    "# find indices with unmeasured boiling points\n",
    "#$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n",
    "nodata = \n",
    "#$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n",
    "\n",
    "niter = 0\n",
    "while nodata.any():\n",
    "#for jj in range(1):\n",
    "\n",
    "    # extract the training data from 'X' and 'y' above\n",
    "    # find the current \"incumbent\"\n",
    "    #$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n",
    "    X0     = X[~nodata,:].copy()\n",
    "    y0     = y[~nodata,:].copy()\n",
    "    ibest  = \n",
    "    ybest  = \n",
    "    #$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n",
    "    print(\"There are currently {} labeled samples\".format(len(y0)))\n",
    "    print(\"Current closest value to target is {:>5.1f}\".format(ybest))\n",
    "    \n",
    "    # increment counter and check convergence\n",
    "    niter += 1\n",
    "    conv   = 100*np.abs(ybest-target)/target < 1. # setup something to determine convergence\n",
    "    if (conv):\n",
    "        print(\"\\n\\nWe have found a molecule!\")\n",
    "        break\n",
    "    elif niter >= 150:\n",
    "        print(\"We have not found a molecule!\")\n",
    "        print(\"Consider a different target, acquisition function, or loosening convergence criterion\")\n",
    "        break    \n",
    "    \n",
    "    # perform data transformation and feature scaling on labels\n",
    "    # you should only scale the labels with the values in y0\n",
    "    X0_sc    = Xscaler.transform(X0)     # the Xscaler was defined earlier\n",
    "    #$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n",
    "    yscaler  = \n",
    "    y0_sc    = \n",
    "    #$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n",
    "    T_sc     = yscaler.transform([[target]])[0] # this is the transformed value of our target\n",
    "    \n",
    "    #$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n",
    "    # build a GPR surrogate model\n",
    "    the_kernel = build_kernel({'const': 1.0, 'length' : 20, 'noise': .05})\n",
    "    the_model  = \n",
    "    #$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n",
    "    \n",
    "    #$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n",
    "    # train the model with our known data\n",
    "    \n",
    "    #$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n",
    "    \n",
    "    #$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n",
    "    # make predictions (we can just do over the whole dataset for simplicity)\n",
    "    yhat_sc_mean,yhat_sc_std = the_model.predict(Xscaler.transform(X),return_std=True)\n",
    "    yhat_mean   = yscaler.inverse_transform(yhat_sc_mean[:,0])\n",
    "    mean_plus   = yscaler.inverse_transform(yhat_sc_mean[:,0]+ yhat_sc_std[:,None])\n",
    "    mean_minus  = yscaler.inverse_transform(yhat_sc_mean[:,0]- yhat_sc_std[:,None])\n",
    "    #$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n",
    "    \n",
    "    # compute acquisition function for all unlabeled data points\n",
    "    acq  = -1.0*np.ones(len(y))\n",
    "    T    = 1./(yscaler.transform([[ybest]])[0] - T_sc)**2\n",
    "    for i,flag in enumerate(nodata):\n",
    "        if flag:\n",
    "            M  = 1./(yhat_sc_mean[i]-T_sc)**2\n",
    "            S  = 2*yhat_sc_std[i]/(yhat_sc_mean[i]-T_sc)**3\n",
    "            acq[i] = eval_EI(T,M,S,0.01)\n",
    "            #acq[i] = eval_UCB(T,M,S,1.0)\n",
    "            \n",
    "    #$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n",
    "    # select new point for measurement/query\n",
    "    inew = np.argmax(acq)\n",
    "    nodata[inew] = False\n",
    "    #$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n",
    "    \n",
    "    #$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n",
    "    # get value with leruli\n",
    "    smi = curtox.loc[inew,'smiles']\n",
    "    y[inew] = leruli.graph_to_boiling_point(smi)['bp']+273.15\n",
    "    #$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n",
    "    \n",
    "    print(\"For molecule {}\\n  Tb = {:>5.1f} K\\n\".format(smi,y[inew][0]))\n",
    "    \n",
    "ibest    = np.argmin((y-ybest)**2)\n",
    "the_best = Chem.MolFromSmiles(curtox.loc[ibest,'smiles'])\n",
    "print(\"The boiling point of the best found match is {:>5.1f}\".format(y[ibest][0]))\n",
    "print(\"Here we have it:\")\n",
    "the_best"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Performance of the GPR model during active learning\n",
    "\n",
    "One thing that may be sometimes surprising is that the accuracy of models during active learning campaigns may actually be somewhat low, and yet our targets are still achieved. In such scenarios, we consider the value of the surrogate model to be predictive *enough* to point us in the right direction. Another thing to consider during active learning is that our training set is *heavily* biased. Should we even expect it to generalize well? When might we?\n",
    "\n",
    "If you have extra time in the workshop (or after), you might consider actually assessing how well GPR does in predicting $T_b$ for dataset. You can do this with the small amount of data given or perhaps acquire more data using `leruli`. For reference, we have trained models and assessed their performance using 5-fold cross-validation using the same kernel choice as earlier. The output is shown below for reference and should give you some sense of the type of accuracy that can be achieved. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "alzUTkXNQPan",
    "outputId": "f53c653e-71f2-4b9b-f7b0-fdc558c27d42",
    "tags": [
     "remove-input"
    ]
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.85011669 0.88614936 0.80833342 0.84293131 0.80548622]\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from scipy.spatial.distance     import pdist,cdist,squareform\n",
    "from sklearn.gaussian_process.kernels import RBF, WhiteKernel, Matern,ConstantKernel\n",
    "from scipy.optimize             import minimize, minimize_scalar\n",
    "from sklearn.gaussian_process   import GaussianProcessRegressor\n",
    "from scipy.special import erf\n",
    "from sklearn.model_selection  import train_test_split, KFold\n",
    "from sklearn.metrics     import r2_score, mean_squared_error,mean_absolute_error\n",
    "\n",
    "# We will estimate the model accuracy using cross-validation\n",
    "k     = 5\n",
    "kf    = KFold(n_splits=k,shuffle=True,random_state=1)\n",
    "r2s   = np.zeros([k])\n",
    "mses  = np.zeros([k])\n",
    "maes  = np.zeros([k])\n",
    "\n",
    "fig,axs = plt.subplots()\n",
    "colors =  plt.cm.Accent([i for i in range(k)])\n",
    "for i,(iTrain,iTest) in enumerate(kf.split(y)):\n",
    "    Xi_tr = X[iTrain]\n",
    "    Xi_te = X[iTest]\n",
    "    yi_tr = y[iTrain]\n",
    "    yi_te = y[iTest]\n",
    "    the_kernel = build_kernel({'const': 1.0, 'length' : 1e-3, 'noise': .05}) #,length_scale_bounds=\"fixed\")\n",
    "    the_model  = GaussianProcessRegressor(kernel=the_kernel)\n",
    "    Xscaler    = preprocessing.StandardScaler().fit(Xi_tr)\n",
    "    yscaler    = preprocessing.StandardScaler().fit(yi_tr)\n",
    "    X_sc       = Xscaler.transform(Xi_tr)\n",
    "    y_sc       = yscaler.transform(yi_tr)\n",
    "    the_model.fit(X_sc,y_sc)\n",
    "    yhat_sc_mean,yhat_sc_std = the_model.predict(Xscaler.transform(Xi_te),return_std=True)\n",
    "    \n",
    "    \n",
    "    yhat_mean   = yscaler.inverse_transform(yhat_sc_mean[:,0])\n",
    "    mean_plus   = yscaler.inverse_transform(yhat_sc_mean[:,0]+ yhat_sc_std)\n",
    "    mean_minus  = yscaler.inverse_transform(yhat_sc_mean[:,0]- yhat_sc_std)\n",
    "    (r2s[i],mses[i],maes[i]) = \\\n",
    "    (r2_score(yi_te,yhat_mean),mean_squared_error(yi_te,yhat_mean),mean_absolute_error(yi_te,yhat_mean))\n",
    "    plt.plot(yi_te,yhat_mean,marker='o',linestyle=\"\",markersize=8,color=colors[i],markeredgecolor='k',alpha=0.5)\n",
    "plt.xlim([100,800])\n",
    "plt.ylim([100,800])\n",
    "print(r2s)\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "celltoolbar": "Tags",
  "colab": {
   "collapsed_sections": [],
   "name": "day3.ipynb",
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
