{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "G1LaNbdf49Z8"
   },
   "source": [
    "## Day 3 Notebook: Module A Intro"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "s-KBDjho5SkY"
   },
   "source": [
    "## Setup of Python Environment\n",
    "For this notebook, we will need a few more modules that are not native to Google Colab. Run the cell below to install these. `rdkit` is a generally useful cheminformatics software. `mordred` is a module that enables calculation of molecular descriptors and pairs well with `rdkit`. `leruli` is a web service that offers real-time structure and property predictions. \n",
    "\n",
    "During the workshop, you may not actually use `mordred` as the calculation of descriptors (there are ~1500) can take awhile for all the molecular structures, but it is worth checking out. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "kYFvVhvO46zX",
    "outputId": "31d81cdb-ca58-429c-e87a-89525630645a",
    "tags": [
     "hide-output"
    ]
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: rdkit-pypi in /opt/anaconda3/lib/python3.8/site-packages (2022.3.2.1)\n",
      "Requirement already satisfied: numpy in /opt/anaconda3/lib/python3.8/site-packages (from rdkit-pypi) (1.20.3)\n",
      "Requirement already satisfied: Pillow in /opt/anaconda3/lib/python3.8/site-packages (from rdkit-pypi) (8.3.1)\n",
      "Requirement already satisfied: leruli in /opt/anaconda3/lib/python3.8/site-packages (22.1.6)\n",
      "Requirement already satisfied: aiohttp in /opt/anaconda3/lib/python3.8/site-packages (from leruli) (3.8.1)\n",
      "Requirement already satisfied: tabulate in /opt/anaconda3/lib/python3.8/site-packages (from leruli) (0.8.9)\n",
      "Requirement already satisfied: tqdm>=4.62.0 in /opt/anaconda3/lib/python3.8/site-packages (from leruli) (4.62.2)\n",
      "Requirement already satisfied: docker in /opt/anaconda3/lib/python3.8/site-packages (from leruli) (5.0.3)\n",
      "Requirement already satisfied: minio in /opt/anaconda3/lib/python3.8/site-packages (from leruli) (7.1.8)\n",
      "Requirement already satisfied: aiobotocore in /opt/anaconda3/lib/python3.8/site-packages (from leruli) (2.3.2)\n",
      "Requirement already satisfied: Click>=7.0 in /opt/anaconda3/lib/python3.8/site-packages (from leruli) (8.0.1)\n",
      "Requirement already satisfied: requests in /opt/anaconda3/lib/python3.8/site-packages (from leruli) (2.26.0)\n",
      "Requirement already satisfied: aioitertools>=0.5.1 in /opt/anaconda3/lib/python3.8/site-packages (from aiobotocore->leruli) (0.10.0)\n",
      "Requirement already satisfied: botocore<1.24.22,>=1.24.21 in /opt/anaconda3/lib/python3.8/site-packages (from aiobotocore->leruli) (1.24.21)\n",
      "Requirement already satisfied: wrapt>=1.10.10 in /opt/anaconda3/lib/python3.8/site-packages (from aiobotocore->leruli) (1.12.1)\n",
      "Requirement already satisfied: multidict<7.0,>=4.5 in /opt/anaconda3/lib/python3.8/site-packages (from aiohttp->leruli) (6.0.2)\n",
      "Requirement already satisfied: async-timeout<5.0,>=4.0.0a3 in /opt/anaconda3/lib/python3.8/site-packages (from aiohttp->leruli) (4.0.2)\n",
      "Requirement already satisfied: aiosignal>=1.1.2 in /opt/anaconda3/lib/python3.8/site-packages (from aiohttp->leruli) (1.2.0)\n",
      "Requirement already satisfied: frozenlist>=1.1.1 in /opt/anaconda3/lib/python3.8/site-packages (from aiohttp->leruli) (1.3.0)\n",
      "Requirement already satisfied: attrs>=17.3.0 in /opt/anaconda3/lib/python3.8/site-packages (from aiohttp->leruli) (21.2.0)\n",
      "Requirement already satisfied: charset-normalizer<3.0,>=2.0 in /opt/anaconda3/lib/python3.8/site-packages (from aiohttp->leruli) (2.0.0)\n",
      "Requirement already satisfied: yarl<2.0,>=1.0 in /opt/anaconda3/lib/python3.8/site-packages (from aiohttp->leruli) (1.7.2)\n",
      "Requirement already satisfied: typing_extensions>=4.0 in /opt/anaconda3/lib/python3.8/site-packages (from aioitertools>=0.5.1->aiobotocore->leruli) (4.2.0)\n",
      "Requirement already satisfied: jmespath<2.0.0,>=0.7.1 in /opt/anaconda3/lib/python3.8/site-packages (from botocore<1.24.22,>=1.24.21->aiobotocore->leruli) (1.0.0)\n",
      "Requirement already satisfied: urllib3<1.27,>=1.25.4 in /opt/anaconda3/lib/python3.8/site-packages (from botocore<1.24.22,>=1.24.21->aiobotocore->leruli) (1.26.6)\n",
      "Requirement already satisfied: python-dateutil<3.0.0,>=2.1 in /opt/anaconda3/lib/python3.8/site-packages (from botocore<1.24.22,>=1.24.21->aiobotocore->leruli) (2.8.2)\n",
      "Requirement already satisfied: six>=1.5 in /opt/anaconda3/lib/python3.8/site-packages (from python-dateutil<3.0.0,>=2.1->botocore<1.24.22,>=1.24.21->aiobotocore->leruli) (1.16.0)\n",
      "Requirement already satisfied: idna>=2.0 in /opt/anaconda3/lib/python3.8/site-packages (from yarl<2.0,>=1.0->aiohttp->leruli) (3.1)\n",
      "Requirement already satisfied: websocket-client>=0.32.0 in /opt/anaconda3/lib/python3.8/site-packages (from docker->leruli) (0.57.0)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in /opt/anaconda3/lib/python3.8/site-packages (from requests->leruli) (2022.5.18.1)\n",
      "Requirement already satisfied: mordred[full] in /opt/anaconda3/lib/python3.8/site-packages (1.2.0)\n",
      "Requirement already satisfied: six==1.* in /opt/anaconda3/lib/python3.8/site-packages (from mordred[full]) (1.16.0)\n",
      "Requirement already satisfied: numpy==1.* in /opt/anaconda3/lib/python3.8/site-packages (from mordred[full]) (1.20.3)\n",
      "Requirement already satisfied: networkx==2.* in /opt/anaconda3/lib/python3.8/site-packages (from mordred[full]) (2.6.2)\n",
      "Requirement already satisfied: tqdm in /opt/anaconda3/lib/python3.8/site-packages (from mordred[full]) (4.62.2)\n",
      "Requirement already satisfied: pandas in /opt/anaconda3/lib/python3.8/site-packages (from mordred[full]) (1.3.2)\n",
      "Requirement already satisfied: python-dateutil>=2.7.3 in /opt/anaconda3/lib/python3.8/site-packages (from pandas->mordred[full]) (2.8.2)\n",
      "Requirement already satisfied: pytz>=2017.3 in /opt/anaconda3/lib/python3.8/site-packages (from pandas->mordred[full]) (2021.1)\n"
     ]
    }
   ],
   "source": [
    "!pip install rdkit-pypi\n",
    "!pip install leruli\n",
    "!pip install 'mordred[full]'\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "id": "L6SmwNPcwNyE"
   },
   "outputs": [],
   "source": [
    "# Modules\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.spatial.distance import cdist\n",
    "from sklearn.gaussian_process.kernels import RBF\n",
    "from sklearn.gaussian_process   import GaussianProcessRegressor\n",
    "from sklearn import preprocessing\n",
    "import pandas as pd\n",
    "from rdkit import Chem\n",
    "from rdkit.Chem import PandasTools as PT\n",
    "from mordred import Calculator, descriptors\n",
    "from mordred.error import Missing"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "ewu_6ApydqPR"
   },
   "source": [
    "## Activity 1: Understanding Gaussian Process Regression\n",
    "\n",
    "First, let's build some intuition surrounding GPR. We will start by considering *Multivariate Gaussians*, which can be used to describe a set of normally distributed and possibly correlated random variables. Use the cell below to draw a small number of random samples for a two-dimensional Gaussian. We will then plot these random samples in two ways."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 252
    },
    "id": "wsEUw1uB5kdl",
    "outputId": "666ecdac-5325-48eb-c691-8832d250d88c"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "rng = np.random.default_rng() # sets up a random number generator\n",
    "ndim= 2\n",
    "nsamples = 5\n",
    "\n",
    "# define the distribution and draw samples\n",
    "mean=np.zeros(ndim) # zero mean\n",
    "cov =np.array([[1,0.8],[0.8,2]]) # some covariance matrix with correlation present\n",
    "samples = rng.multivariate_normal(mean,cov,nsamples)\n",
    "\n",
    "# for reference, we will generate a ton of samples to visualize the \"true\" distribution\n",
    "x1t,x2t = rng.multivariate_normal(mean,cov,1000000).T\n",
    "fig,ax = plt.subplots(1,2)\n",
    "ax[0].hist2d(x1t,x2t,bins=(100,100),cmap=plt.cm.magma_r)\n",
    "\n",
    "# and we will overlay our samples on top of this\n",
    "mycmap = plt.cm.get_cmap('winter',nsamples)\n",
    "myColors = [mycmap(i/(nsamples-1.)) for i in range(nsamples)]\n",
    "for i,sample in enumerate(samples):\n",
    "  ax[0].plot(sample[0],sample[1],linestyle = 'none', marker = 'x', color = myColors[i],linewidth=5 )\n",
    "ax[0].axis('square')\n",
    "ax[0].set_xlim([-6,6])\n",
    "ax[0].set_ylim([-6,6])\n",
    "\n",
    "# Now we will also represent these same draws by plotting them \n",
    "# as lines connecting the two Gaussian vectors\n",
    "xrvs = [dim/(ndim-1.) for dim in range(ndim)]\n",
    "for i,sample in enumerate(samples):\n",
    "    ax[1].plot(xrvs,sample,linestyle='-',marker = 'x',color=myColors[i],linewidth=2)\n",
    "ax[1].xaxis.set_ticks(xrvs)\n",
    "ax[1].xaxis.set_ticklabels([])    \n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "MyMhctNDwlpN"
   },
   "source": [
    "Now, we let's consider more complex situation: a *30-dimensional* Gaussian. Of course, we will not show the underlying distribution but use the \"line view\" to illustrate the samples. We will choose to represent the covariance as \n",
    "$$k(x_i,x_j) = \\exp \\left[-\\frac{(x_i-x_j)^2}{2} \\right]$$. How does this compare to the covariance from the previous cell?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 252
    },
    "id": "O8LbMs4iwkf9",
    "outputId": "c7aab6f3-2289-41c9-a2ce-b63ae805aaf6"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "def covkernel(xi,xj,l=1.0):\n",
    "    dij= cdist(xi,xj,metric='euclidean') # returns matrix of pairwise distances\n",
    "    return np.exp(-0.5*dij**2/l**2)\n",
    "\n",
    "ndim     = 30\n",
    "nsamples = 5\n",
    "length_scale = 0.1\n",
    "xrvs     = np.linspace(0,1,ndim)[:,np.newaxis]\n",
    "mycmap = plt.cm.get_cmap('gist_rainbow',nsamples)\n",
    "myColors = [mycmap(i/(nsamples-1.)) for i in range(nsamples)]\n",
    "\n",
    "# define the distribution and draw samples\n",
    "mean=np.zeros(ndim) # zero mean\n",
    "cov = covkernel(xrvs,xrvs,l=length_scale) # some covariance matrix with correlation present\n",
    "samples = rng.multivariate_normal(mean,cov,nsamples)\n",
    "\n",
    "# Represent the draws by plotting them \n",
    "# as lines connecting the Gaussian vectors\n",
    "fig,axs = plt.subplots(1)\n",
    "for i,sample in enumerate(samples):\n",
    "    axs.plot(xrvs,sample,linestyle='-',marker = 'x',color=myColors[i],linewidth=2)\n",
    "axs.xaxis.set_ticks(list(xrvs))\n",
    "axs.axes.get_xaxis().set_visible(False)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "YifDjAO3wyVP"
   },
   "source": [
    "### Example GPR with Van der Waals EOS\n",
    "Now, let's see if we can generate a few \"observations,\" and then sample the posterior. Let's assume our true function is something we know, like the Van der Waals equation of state:\n",
    "\n",
    "$$P_r = \\frac{8}{3}\\frac{T_r}{V_r - \\frac{1}{3}}-\\frac{3}{V_r^2}$$\n",
    "\n",
    "To keep this problem in a physically reasonable range, we will suppose $T_r = 0.85$ and examine $V_r$ over the range of 0.5 to 4. In the following, we can include fewer or more observations to illustrate how our uncertainty changes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 269
    },
    "id": "jf7WGZoXwqnX",
    "outputId": "75948402-ce93-4aba-881c-7137e99cc5d4"
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "def vdw_P(Tr,Vr):\n",
    "    term1 = 8.*Tr/(3*Vr-1)\n",
    "    term2 = 3.0/(Vr*Vr)\n",
    "    return term1 - term2\n",
    "\n",
    "def make_plot(Vs,Ps,x,y):\n",
    "    fig,axs = plt.subplots(1)\n",
    "    axs.plot(Vs,Ps,linestyle='-',color='k',linewidth=4)\n",
    "    axs.plot(x[:,0],y[:,0],linestyle='none',marker = 'o',color='r',markersize=10)\n",
    "    axs.set_xlim([0,4])\n",
    "    axs.set_ylim([-1.5,2])\n",
    "    return fig,axs\n",
    "\n",
    "def make_plot_posterior(axs,fmean,fp,fm):\n",
    "    axs.fill_between(xs[:,0],fm,fp,alpha = 0.2)\n",
    "    axs.plot(xs,fmean,linestyle='-',color='b',linewidth=4)\n",
    "    return \n",
    "\n",
    "# look at a reasonable range of parameters\n",
    "Tr = 0.85\n",
    "Vmin,Vmax = 0.5,4\n",
    "Vs = np.linspace(Vmin,Vmax,1000)\n",
    "Ps = vdw_P(Tr,Vs)\n",
    "\n",
    "# generate random observations (over slightly smaller interval)\n",
    "nobs = 10\n",
    "x    = Vmin + (Vmax-1-Vmin)*rng.random(nobs) # random samples for V\n",
    "x    = x[:,np.newaxis]\n",
    "y    = vdw_P(Tr,x)\n",
    "yavg = np.mean(y)\n",
    "fig,axs = make_plot(Vs,Ps,x,y)\n",
    "\n",
    "# now generate our test points (denoted *)\n",
    "xs = Vs[:,np.newaxis]\n",
    "\n",
    "# we need to get all of the relevant covariant matrices\n",
    "length  = 0.1\n",
    "kxsx    = covkernel(xs,x,l=length)\n",
    "kxx     = covkernel(x,x,l=length)\n",
    "invkxx  = np.linalg.inv(kxx)\n",
    "kxsxs   = covkernel(xs,xs,l=length)\n",
    "kxxs    = covkernel(x,xs,l=length)\n",
    "\n",
    "# now we can sample the posterior with the following\n",
    "# mean and covariance functions. We will generate a number of samples\n",
    "# and then show a few for representation sake\n",
    "# Note: as a \"prior\" to formulate the mean over our functions, we will use an ideal gas\n",
    "# the observe mean\n",
    "muf   = yavg\n",
    "meanf = muf+kxsx@invkxx@(y-yavg) # <-- differs from common eqns that assume mean = 0\n",
    "covf  = kxsxs - kxsx@invkxx@kxxs\n",
    "nsamples = 500\n",
    "samples  = rng.multivariate_normal(meanf[:,0],covf,nsamples)\n",
    "sample_mean = np.mean(samples,axis=0)\n",
    "sample_std  = np.std(samples,axis=0)\n",
    "mean_plus   = sample_mean + 1*sample_std\n",
    "mean_minus  = sample_mean - 1*sample_std\n",
    "make_plot_posterior(axs,sample_mean,mean_minus,mean_plus)\n",
    "\n",
    "for i,sample in enumerate(samples[:5]):\n",
    "    axs.plot(xs,sample,linestyle='--',color=myColors[i],linewidth=1)\n",
    "    \n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "kiaeWDiHxAuu"
   },
   "source": [
    "The above presumes noise-free observations and also uses a naive formulation scheme with direct sampling to obtain our results. The posterior mean and variance can actually be obtained directly as we will show next. First run the cell below leaving `sigma_n` to be 0 (i.e., noise-free) and compare the results with the previous cell. Then, run again by changing the value of the noise to get a feel for how noisy observations impact the GP.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 269
    },
    "id": "5NSj24wSw48k",
    "outputId": "5463e0cf-dcba-441b-df16-b0abbb65b2bb"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# new targets with noise:\n",
    "sigma_n = 0.0\n",
    "\n",
    "# add noise to previous observations\n",
    "y    = vdw_P(Tr,x) + rng.normal(loc=0,scale=sigma_n,size=nobs)[:,np.newaxis]\n",
    "yavg = np.mean(y)\n",
    "std  = np.std(y)\n",
    "\n",
    "# conventional algorithm\n",
    "length  = 0.1\n",
    "kxsx    = covkernel(xs,x,l=length)\n",
    "kxx     = covkernel(x,x,l=length)\n",
    "kxsxs   = covkernel(xs,xs,l=length)\n",
    "kxxs    = covkernel(x,xs,l=length)\n",
    "\n",
    "#meanf = muf+kxsx@invkxx@(y-yavg) \n",
    "# 1. Cholesky decomposition of K(x,x)\n",
    "L = np.linalg.cholesky(kxx)\n",
    "\n",
    "# 2. Obtain alpha = L.T|(L|y) = L.T/b \n",
    "b     = np.linalg.lstsq(L,y[:,0]-yavg,rcond=None)[0]\n",
    "alpha = np.linalg.lstsq(L.T,b,rcond=None)[0]\n",
    "\n",
    "# 3. Obtain the posterior mean function\n",
    "fmean = yavg + kxxs.T@alpha\n",
    "\n",
    "# 4. obtain posterior variance function\n",
    "v = np.linalg.lstsq(L,kxxs,rcond=None)[0]\n",
    "fvar = np.diag(kxsxs - v.T@v)\n",
    "fstd = np.sqrt(fvar)\n",
    "mean_plus   = fmean + 1*fstd*std\n",
    "mean_minus  = fmean - 1*fstd*std\n",
    "\n",
    "#plotting\n",
    "fig,axs = make_plot(Vs,Ps,x,y)\n",
    "make_plot_posterior(axs,fmean,mean_minus,mean_plus)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "kVrGWlXDx8Ht"
   },
   "source": [
    "### scikit-learn GPR Implementation\n",
    "Now, we will simply repeat the exercise but using built-in functions from `scikit-learn` to do the GPR. There are many other python packages that support GPR. `scikit-learn` provides a good and simple GPR implementation, but if one desires more advanced capabilities, customizability, and performance -- another package may be preferred."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 269
    },
    "id": "gmun-I7AxDg-",
    "outputId": "8e61b051-98d6-4a2e-cf22-29fd5a7fbf44"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "the_kernel = RBF(length_scale=0.1,length_scale_bounds=\"fixed\")\n",
    "the_model  = GaussianProcessRegressor(kernel=the_kernel)\n",
    "the_model.fit(x,y)\n",
    "fmean,fstd = the_model.predict(xs,return_std=True)\n",
    "mean_plus   = fmean[:,0] + 1*fstd\n",
    "mean_minus  = fmean[:,0] - 1*fstd\n",
    "\n",
    "# plotting\n",
    "fig,axs = make_plot(Vs,Ps,x,y)\n",
    "make_plot_posterior(axs,fmean,mean_minus,mean_plus)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "SAEhxUFRyUnm"
   },
   "source": [
    "Notice that using scikit-learn it presumes that the mean should be zero! This highlights a need that we should probably normalized our data. Recent version of scikit learn allow you to specify whether the data should be normalized during GPR when you build the Regressor. My opinion is that you should handle this yourself so you have a firm idea as to what is happening with your data. We will demonstrate this by using a little bit of preprocessing... "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 304
    },
    "id": "46CYEcHwyQW7",
    "outputId": "9b00e311-83bf-4a77-e4a1-80c06113cf35"
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYQAAAD8CAYAAAB3u9PLAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjQuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/MnkTPAAAACXBIWXMAAAsTAAALEwEAmpwYAAAv8UlEQVR4nO3deXwkdZ3/8denj6STdK6ZydxXGIbbASFyiCIesMC6iwryAxRZVx1B+Xn+1uW37qp7/FbY1VURF5xF5FwUQZHVAcEDORSY4WYYcE7myMzkPjpJp4/6/v7omkw66UyO7iSd4f18PPqRrqpvV32nJql31/f7rSpzziEiIhKY7gqIiEhxUCCIiAigQBAREZ8CQUREAAWCiIj4FAgiIgIUIBDMbImZ/c7MNprZBjP7bI4yZmbXmdlmM3vRzE7Md7siIlJYoQKsIwV80Tn3rJlVAs+Y2cPOuVcGlTkXWOm/TgFu8H+KiEiRyPsMwTm3xzn3rP++G9gILBpS7HzgNpfxJFBjZgvy3baIiBROIc4QBpjZcuDNwFNDFi0Cdg6a3uXP25NjHauB1QAVFRUnHXXUUYWsoojIIe2ZZ55pcc7VTeSzBQsEM4sC9wKfc851DV2c4yM575nhnFsDrAFoaGhw69evL1QVRUQOeWb2+kQ/W5BRRmYWJhMGdzrnfpqjyC5gyaDpxUBjIbYtIiKFUYhRRgb8ANjonPuPEYrdD3zEH210KtDpnBvWXCQiItOnEE1GpwOXAS+Z2fP+vL8DlgI4524E1gLnAZuBXuCjBdiuiIgUUN6B4Jx7nNx9BIPLOODT+W5LREQmj65UFhERQIEgIiI+BYKIiAAKBBER8SkQREQEUCCIiIhPgSAiIoACQUREfAoEEREBFAgiIuJTIIiICKBAEBERnwJBREQABYKIiPgUCCIiAigQRETEp0AQERFAgTBh1157Le94xztoaGjg6KOP5v7775/uKomI5KUQz1R+Q9q0aROPPvrowHRTU9M01kZEJH86Q5igioqKrOlYLDZNNRERKQwFwgRFo9Gs6Z6enmmqiYhIYSgQJkhnCCJyqClIIJjZzWbWZGYvj7D8TDPrNLPn/ddXCrHd6TQ0EHSGICIzXaE6lW8BrgduO0iZx5xz7y3Q9qbd0CYjnSGIyExXkDME59yjQFsh1jVT6AxBRA41U9mHcJqZvWBmD5jZsSMVMrPVZrbezNY3NzdPYfXGR53KInKomapAeBZY5pw7HvgucN9IBZ1za5xzDc65hrq6uimq3vipU1lEDjVTEgjOuS7nXMx/vxYIm9mcqdj2ZFGTkYgcaqYkEMxsvpmZ//5kf7utU7HtyaJOZRE51BRklJGZ3QWcCcwxs13AV4EwgHPuRuBC4EozSwF9wMXOOVeIbU8XnSGIyKGmIIHgnLtklOXXkxmWeshQp7KIHGp0pfIEqVNZRA41CoQJKi0tJRgMDkwnEgmSyeQ01khEJD8KhAkyM/UjiMghRYGQBwWCiBxKFAh50NBTETmUKBDyoDMEETmUKBDyoKGnInIoUSBM1JYtfOn11+kA0kAHsPTaa2HLlmmtlojIRCkQJuKBB2DVKtp2voMOlhIAqoHFDz4Iq1ZllouIzDAKhPHasgUuvJCdvbP4GD/kMLZyAfewlXqC6TT09sKFF+pMQURmHAXCeH3zm5BMcgNXkiaER5CfcgGn8BR/YmWmTDIJ3/rW9NZTRGScFAjjdccd9CWDrGF11uwW6riEu0gTyATC7bdPUwVFRCZGgTBesRgBPK7lbzmWl7MWPctJ/IiLB8qJiMwkCoTxikYpJcHHuJmXeBMf4N6sxf/MP+D8ciIiM4kCYbw+/GEIhwEw4N/4EkFSA4tf4ygeC54Jl102PfUTEZkgBcJ4ffGLA4EAsIKtXDDkLOE2PgKf//xU10xEJC8KhPFasQLuuQfKy/FCmecLXc6tWUXuiXyI1LIV01E7EZEJUyBMxLnnwosv0n7hhXQC7+YhZtEysLizp4RHH/Omr34iIhOgQJioFSvoufZaaoAIadpYm7X4vvtn9COjReQNSIGQh6qqqkFTv8xa9uuHbWorIyKSJwVCHiorKwdNPQQcaCZ69RWjrW3KqyQiMmEKhDwEg8FBz0ToAF4cWOac8dtH0tNRLRGRCSlIIJjZzWbWZGYvj7DczOw6M9tsZi+a2YmF2G4xyG42ejRr2SO/n9q6iIjko1BnCLcA5xxk+bnASv+1GrihQNuddgcLhMcfn9q6iIjkoyCB4Jx7FDhYi/n5wG0u40mgxswWFGLb062mpmbQ1GNZy15+IUBv75RWR0RkwqaqD2ERsHPQ9C5/3jBmttrM1pvZ+ubm5impXD5qa2sHTTUxf/6Bm9ql08azz2n4qYjMDFMVCLnGYOY8Ujrn1jjnGpxzDXV1dZNcrfzNmjUra3rZsuwQ++NTukBNRGaGqQqEXcCSQdOLgcYp2vakyj5DgHnzdmVNr1s3lbUREZm4qQqE+4GP+KONTgU6nXN7pmjbk2roGUJt7eas6eee1QVqIjIzhAqxEjO7CzgTmGNmu4CvAmEA59yNwFrgPGAz0At8tBDbLQZDzxAikVcwcziXCYItm4zubsi6hk1EpAgVJBCcc5eMstwBny7EtorN0EDo6dnLEUfCa69mpp0z1q93vPOdOlMQkeKmK5XzNLTJqK2tjYaG7DJPrVPHsogUPwVCnoaeIbS3t9NwUvbZwAsvIiJS9BQIecp1hrBqVXaZl19Sc5GIFL+C9CG8keU6Q3jTm7LLvPaqkUpBSHv7kJNMeyRSHmnncB64IZfX2P5LcIZ8J7ARviPsnx0wwyzzMxQwQsE35nc35xwpz5H2HM5l9q/nDiyDES5okgnRISpPQwOhra2NOXMc8+bDvr2ZP+9kwvjTn+CYY6ajhlJosf4U7T0JuuMp0t7UHI4CAYiEg0RLQ1SXhYmEg1Oy3amUTHvE4il6EiniST9op2j/SoYCIU9lZWVEIhHi8TgAqVSKWCzGm95UMRAIAM8+73HMMVP7LS+R8ujsSxJPpnEOgkGjoiRIVSRMIKBmrPGKJ9Ps7uijt3/qb2vuedDbn6a3P01TVz9VZSEWVJdREpr5Zw69iRTN3f109aWmuypveDP/t6kIzJkzJ2u6paWF44/PPuA+//zUfdNJe47dHX38aV83ezvjdPQm6exL0hZLsLOtj417u2ju7h845ZbRdcWTbG6KTUsY5NLVl2JTUzedfcnprsqEeZ5jV3svW5p6FAZFQoFQAHPnzs2abmpq4oQhgfDiFI00SqQ8tjTHaIslGOl473mwtzPOtpYeUmkNiR1NZ1+SHa29I+7P6eJ5sKO1l7aexHRXZdz2/56298zcQDsUqcmoAIbehK+5uXnYSKMNL09+E00y7bG1JUYyNbYjV09/mm0tPdTPqZiWTkvnHG09Cdp7EyTTjvKSIHMrI5SVFE/7eG8ixc624guDwXa39xEMGNVl4emuypgk0x7bWnpIpPRlpNjoDKEAcp0hHHUUhEIHjiKNuwO0t09eHZxz7GjrHXMY7BdPemxv7cGb4s47z3Nsb+2lsSNOX8IjlXZ09aXY3BSjubt/SusyklTa4/UiPDPIZWdbL/FkcTRnHYznObYrDIqWAqEAcp0hlJTAEUdmH0leemny6tAc659w+3ZfwmN3R1+BazQy5xyvt/USi+duN97bGWdfV7xg2+tLpGns6GNnWy+tsf4xh9/ujj5S6RmQBoBzsKOtd9KCPZX2CrLu3R19xJMKg2KlQCiAXGcIwLDrEZ55dnL+EPpTmZEn+ejoTdLROzVt0fu6+kcMg/2auvppjeX3b3LOsbczzuamGK2xBB29SRo74mxpjo36DbWjNzHjOjr7kx57ChikkBliu7mpm417utnQ2MXrrRP/dt/ek/k/kOKlQCiAXGcIAMcP6Ud4cZLOEJq6+gvSrLG7o4/kJHcy7x9iOBaNHXG64xM7gDjn2NXel3Nb8WSmDXukf2sq7dHYUdgD61RpiyWI9RcmyFpi/Wxr7qEvcWA/dfWl2NIcG3fzVDLt0dg5dWehMjEKhAIY6QzhhBOyd+/LkxAI8WS6YN+6PA/2TOKB0DnH7vbxHRR2tvXRn/IPPlu2wKc+BVVVmSu1olE47rjMz0AgM/9Tn4ItW9jV3nfQ/ZJIeZnO4s2bs9dZVUV89RUEt27N5586rXa39+XdvNMa6x/xdyGVdgcN1Fz2dMTx1FJU9BQIBTA0EPafIQxtMtq40Qr+R1HoDtjOvuS4v2HGk2m648lRDxCtPYlxtx+nPceO1l68X66FVavgppuguzvTaN7TAxs2ZH46l5l/0014q1aR+uXaUddtDz4Ixx+fvc7ubspvu4WVZ59O9HcPj6uuxSKR8tjXPfFg744nRz1DSqUzgxjGci1LrD81o6+XeCNRIBTA0Caj/WcIixZBdfWBP5iemLF9e+G2u/9K5ELb09E3pj/0tOd4vbWHTftibG/p5bW93ezp9D875Nu8q6rCPv1pSrZvG3d9vE1b4IMfhN5eSI7y700mCfT2suyTlx90WyXbt7Hsk5djOdYZSCUJ9I2+jmLWGkvQlxj/IIPMmdPYzuJ6+9O0xA7e7+ScY88UDliQ/FgxX63a0NDg1q9fP93VGFVPTw/RaHRgOhwOE4/HCQQCvPVtHn984kDu3ncfnH9+Yba7tzM+aUM0F9WWMauiZMTlac+xtTmW8xv/3Md/y9yPfRhLJrMOtl4oDOEwr3//VmLvPGtgfiqVoqVpL837mtnbGGPP7jj79iRpaUrT1moctbGRWW0B2phNC3NoZTadVJMiNPBKExyYCpImSIpu0uwJeJilMfMw/30g4HFEso/FqT7CpAetJfMqo4957KOOfbQtjfDSGUdTOyvJ7DkeVTURKqKVRKOVVFRWUlGR+RmNVlJSWoqNdNe6aVBWEmBFXXTMdXLOsaW5Z1xBYgZHzKsc8RYa7T0Jdo2zmVDys2pJzTPOuYbRSw6nC9MKoKKigurqajo7OwFIJpO0trZSV1fHm94Ef3ziQNnnnvc4//z8T8ycc7RP4qigfV1xaspy3/No/zUPucKgZPs26v76w1hf78C8fkrYRj2bUit5PbWMPZdv5J75Yfb2ldPXU04yWQXUAUeS61fyqXz+ISO0UL3ov0a1A7hj8Ix2YK//2u3/3Ad0EwjGiUQcZeWO8nIoKy+hvKKcsvII5RVlRCujVFZFqayuoLKykqrqKJVVlVRVV1JVXUW0soJg0AgGwQIQDEAg6AgEIBDcPz32u+b2JTyau/uZWxXJnLF95Svwk58cCOlwGC66CP7xH2HFCvZ2xcd9VuEc7OnsY9nsihzLXF5NV4N5HsTjEO8znAfpNHgOvHRmmfOMtMeMuGakmCkQCmThwoUDgQCwe/du6urqJm2kUXd/alLHyKfSjpaefuZWRoYta+4eedho1fe+SWN/LQ9zEX/grfyR09jI0XgMuvrYAXsmqeKTrtZ/HT1siZeG3p7Mq3USa1BSmqSiIkW0ylFdDXPnB1m4GOYv9Ji/yGPhIseipR41tY6m7n6qHvk1kYsuhP4hZ5PJJNx5J9xzDz13/YSWt5wxofp09aWI9aeIlmYfTlp7EmO6UDKZhB3bAmx+Lcjm1wI07g7Qss9o2hego93o7TH6eovnzOtQpkAokEWLFrFx48aB6d27d3PCCSfw5kkaadQxhnvAbH4twBOPhNjwQpB9ewMkE1BSCnPneSw7zOPIY9OceHKaWbNz/9F2vPQqc25fQ+DOOyAWg2iU1KUfouOyT8KyegAad+1g/ZNP8PuHN7Puj3Uc0X4l67gVp+6pSZPoD5PoD9PeBjsBXshdLhSKUxtt4ZROjxXuGg5jK/Vso55tzKaVcnopp5dwfz9ll15EycN/JLG8fkJ1anlhA9Fbvg93ZH5XXDRK4AMXUfLxq4ats68PXngmyDNPhlj3xxAvPR8kmdABvxgoEApk4cKFWdONjY1AZlTkYFs2G319UFY28W2lPUfXQcbnP/NUkO/+W4Rnnx7bf+9hK9OcdEqKt5yWpuHUFHPmOqK/ezjT6Zoa1A/Q3U3gBzdR/8Mfcs1pZ3Ddxgpamt4CnA9cAcDTE/9nARAI9lBa2k1ZeQ8V0ThVVSne3LyBY/a+xFzXxGxamUML1XRSQoIQKcIkCeD5PQeZnoBksJR9Z/0F2//q0ySSaZL9HslkikTCkUx6LL77bmavX4/zGNKDEKKLKvYxj0YW8GrlSjZFltPbEyXeV4lzM+dPJpWK0NyxmF+w+KDlgqQoiSewM1KkwhAMeYRCjnDYEQ4bZRUwf0GSJcuN5SvCrFgZYtlhHvMXOoJBiP7uYZZ+8nJcKpnpNwKsu5uaO2+j5u672HjdHTxRfjbr/hjkmacyAZBKKgCK0cz57S5yixYtyprevXs3AJWVsGSpx84dmW/Mnmds3AgnnjjxbXX1JXO2lSaT8M1/jvDfPywd1/q2bgqydVOQn/ht5Ycti/OeXR2sSv8V9WwjSgyAJuayNXUY63gLv//9GbQwb8zbWMIODmczK9jCfPZSG+rgT1d9hCXLotSvqGXu/BC1sxwlpQBl/iujZLtj5Z99gkBv70irH8YrKSf85Q8yd/nwtm2AklPey8qzv06gb+R1emXlbFr7BInlVZlpr4eOdqOlyWhtDtDSbLQ0G20tAfp6oSfm0d2Vpifm0dPjSCY8Uqk0qaRHOu2RSnqkUo502iOddqTTDi+dafv2PMAFgCCZwX/BQa/B0yEKPTgwTYg+QpmmvIT/GmL7Fnjy8ex5Zv1ES3bxjv4wR/E15tJEKf2kCNFMHdtTy3k5dRyvfuIoUuR/471IxFEacQRDmUtGsl+ZvhbTiSmv53EJTUECwczOAb5D5jf2JufcNUOWnwn8HNg/hu+nzrl/KsS2i8VIgQBw7HGOnTsOLHvppfwCIddQ074++PzHy/nDo/n/4W19PcIaPp7XOhpYx3ms5XSe4BSeopqugWVeKEzbhy5nzxeXD/rEyG3NwSNWYD/5SWbo6ZCRS8OEw7hwmMY1tx20+SOxvJ6da25l6ScvP+hoqMHrCARg1myXaWI7eizXUwQYz8E70d9PV2fHyK+ODjo6OmhrjdPRmqaj3aOrM0BPrBLnFgNLgWXAcqAeKB/ztifCuVK6+1fwC1bwizzXVRHtZsGidpYs62VZfYpFS8MsWVbKsvooNbPCRMogWDw3wS1qq5ZM/LN5B4KZBYHvAWcBu4B1Zna/c+6VIUUfc869N9/tFauRmowAjnsTPDjoOqnnn3dcfvnETpnTnht24VgyCX9zZe4weMtbU7z7nCSHH5kmUgZ9vbB7Z4DNrwZ5bl2QjS8H8bz8T9/N0hx5bBvnv6ObK286h2X9m0YuHA7T+vFPj3G9sLi2HDvvvMxDJb71Lbj99kyfRnk5LF8O27dnrlGIRuGyy7DPf566Zcvpbu45aMd7zQXnY6cNWWc0SvyiS9h5+RUTbk+fqJLSUubMncecuWM/8wLwPI9Ydxed7e10tLfR0bGRzvY/0LgrzoXfupvG1GK2Uc9WDmMb9bzOMmJE6aWcHiqyO/ynzGbg9wOvntgONr8Gm18bXjISKaOqppaq6hqqa2qo9t8fmDf8Z3VNLdGqKgIBnTKMRyHOEE4GNjvntgKY2Y/INCoPDYRD2tAzhF27dg28H/awnJccw566PkaxeGpYc9F3/y3Co7/JDoOFiz3+5T96aTgt1zDCNJD5RhzrhufWh3j4Fx088nAvHe31jPXXoopOTj63hHef63jbmSmqa0uA2Xin/CvuiuHfvF04jAsN/+Z9MPOqIgeeH7xiBVx/feY1ilKgfk4F21t7co50WVgTyTw/IMc6I57D29cNM+ROp4FAIHOArK5hyZD9urjpBc647WZshPGYDkgSJkEJz73tLP7n3e+lva2bzvYYnR0xOjt6aG+FjvZKerpn0de3AM87DFgJzMm5zlwOZxObeQR4hEwI7D5o+cHi8T7ie/to2ts4euFBzIzKquphYVE5EBo1Wcuqamqp8ueVlZUX1TUlU6UQgbAIf7CDbxdwSo5yp5nZC0Aj8H+ccxsKsO2isXTp0qzp7du345zDzDhx6EijPB6WM7Qz+cnHgtxyY3afwRFHp/n+nT3Mrhv9gLZrx4v89K5/5zcP/I8/p5K7eRuvcSJbWMFOltBPKWmC1NHMAvbwJl7iZJ7muIqtbF4zvMEy/N7zsKHf5qNRvA99mK0f/gTxpWMLg2gkRF3l+PpDBouEgxxeF2VPZ5xOv9+lJBRgQU2EqsjITWuBgDG/KjLjL6gKBKD86i9hP74zM4g/BwNKSBKOBJn79a9y2ShB7Zyjr6+Xzva97N65iSM+/Lds61/KFlbQTSUJSjAcc2hhHvs4hlc4lg0E6KCm8P/EUeu6v7lt147t4/psKBSisqr6wKs68zNaWZUJmUHzsub788orxn5BYDEpRCDk+lcPPRI9CyxzzsXM7DzgPjJfMYavzGw1sBqGH2SL2bx58ygrK6OvL3MQ6erqoq2tjdmzZ7NyJZSUOhL9mV3VtM9oboYhd7wYlXPZo4t6e+Dvv5DdTjxvgccNt48eBq9v28K3//Wr/ObBoa2/3TTxAF/iAUa+TtnvB7jw8mHzwyFjQXUZ1A7/5h0E5sWTvN4yeudwKGgsrs1jKNbAegIsmVXOIs+Rdo7wGJ8MV1tRQltvomieoTwRS2aVU7rwCPjpT+H97x9+HcJ+paXYT39K5XFH0jrKrSjMjPLyCsrLK1iwCBZedASn3XUbgdTI/TpeKEzbpR/j8b/5B79Jq43O9jY6OzJNXJ3tbf6Bu5POjna6OjsyP/336fTU/x+kUina21ppb5vYFSWBQOBAWFQNCpEcAVM1ZF5lVTUV0cppae4qRCDsAgZ3YywmcxYwwDnXNej9WjP7TzOb45xrGboy59waYA1kbl1RgPpNCTNj+fLlWdcibNu2jdmzZxMKwcojHBteOpCdL70E73rX+LbRk0hn3RzvputLadp74JcmEHB8/bpe6uaNvNu6Ojq48dvX8qNb/4tUKvfFZT9atIRPNO0dtfN2aD+AGSydVU4wx9XN+1VFwsytKj3o8xvMYNns8jEfvMciEDAC42ymW1RTxuam2Iy8+nVeVemBs6Bzz83cBPBrX4Mf//jA/2tJSaaj3r9SeYFz9CbS47pauWX1VdTecxccJBAIh2n9xFWZ5piaGpZy2JjX75yjJ9Z9ICQ6O+js2N/JfiA89i/rGlSmJ9Y95u0Umud5A/WaCDOjIlqZuU1KZRXRyszPysqqzK1SRnhfWVmdV70LEQjrgJVmVk+mYfBi4NLBBcxsPrDPOefM7GQyQy8m82LOaVFfXz8sEBoaMrcUOe44x4ZBF6VNJBAGPxtg1w7jtv/Kbk75yOoEDafm/mN2zvGzH9/Ot/7fV0f8JT3quFV88jN/wzv/7M/Z/fvfsOyTl2e++Q0OBn8Uz44bs/sBzDLfSMtLRv+VmlcVIe25nN9G94fBWNYz2SLhIHMrS9mX58OHplplJJS5XcVgK1Zkmu9uv33Ez5kZS2ZlQnCsd+VNLK/n9e/fyvIC9RnlqlPmgFjFwsXjazFIJpN0d3VmhUnXoPAY/LPbPzvZPy+ZmJqHRY3EOUesu4tYdxf79oy9vyVfef/VOedSZnYV8CsyrQI3O+c2mNkV/vIbgQuBK80sBfQBF7tivqveBNXXZ//Sb9t24E6Zq1bBj+86sOz5F8bfsdw96HYR3/92ZKAJCmDOXI9PfjZ3O/Hr27bwT1d/jnV/eCzn8mNXvZkrv3A1b3/X2QPtnn3vPhvv+ecJXPedrH6A/aN45i9dTqCrn75kmkg4kN35OwYLa8qIhIPs7YyT9u/dX1YSZHFt2bjWM9nqKkvp7k/NmKaj0nCmiWzCnw8FWTKrfEzNegOf+Ys/x946vM/ILruMPR+9gti8PMZB5iEcDjNr9hxmzR575/d+/fE4se4uuro66e7qpLvT/9nVSXd3V/b0oFesK/OZ+EGubylmBfka5pxbC6wdMu/GQe+vB0YfGjLDHSwQTjg+u/ljvM9XTqQ8+v2bye3eafzyZ9mdop/5UpyKaPZnPM/j9v/6Htf/+/+jv394WCxYtJjPXv01zj3/gmEdYItqywgtXDniqJ4IsHR2fuPcZ1WUUFseJp70CAQyB6NiY2YsnVXO5qZY0T9fORgwls0+eJPdWFRFwsyrLmVf5+hnRpFwgPlVEajJPQJsbtqjcwbsu6FKIxFKIxFm180dvXAOyUQiExx+mIwULrHuzsz8zq6sYOntiRX4XzQ2039efgg57LDsttHNmzcPvH/zCdl/pK9syNyxcawX2wxuLvrhDaWkUgfWt6w+zV9cmN2G29K0jy9/7gr++Njvhq0rUlbOJ/73F7ns458ikuMeGrOiJZkhmVPAzCgrKb4gGCwcDFA/p4ItzWNvSplqgUBmmG2hQnVuZYRUOnez3n7BgLF0dnnOO+Lut79Tf3tLz4zsi5mocEnJhM9OANLpND3d3cRiXX7TUTex7i66u7roiXVnzYt1dw5638WrG8b5bXMQBUIBHXHEEVnTg/sT5s/PXOXa1uo3yfQZr74Kxx47tnXvvxito9247+7s8T8fv6o/K1ge++1D/P0XPkV767A+e956xrv4+6//B4uXLs+5nYrSIAurh9/h9I0uEg6yoi7KtpaDX+w2HYIBo35ORcGDdWFNGcGA5RwAEA4Zy2ePLYCipSEWVEdm7HOqp0MwGBzohB+vVUvG/5n9dBlfAa1cuZLgoCPz7t276erKDLAyg+PfnP31ct26sa3XOTfQf/Dzu8NZfQcLFnmc9/7M2YHneVz/7//Cpy+/aFgYVFXX8C/fuoEb7rh3xDAoKwmybHbFjBw/PRUi4SAr50apKiue71HlpUEOnxudtLOseVUR6usqiEZCmGWGA8+OlnB4XXRcfT2zo6XM1xeNoqdAKKCSkhIOP/zwrHmvvvrqwPuGIc8wGmsg9CTSOJd5+Mc9d2afHfyvy/sJh6G7q5PPfOwS1lz3jWGfP+mUt3LPQ4/zlxdeMuLBvqY8zGFzKvJufz7UhYIBls2uoL6ugkr/IDkdSsMBFteWsaIuOuLTygolWhqifk4Fxy2q5ugFVSysKSM0gSHBdZWlLC1AH4dMnuL5qnOIOProo3nttQM3ZNm4cSMnn3wyAKeekv2H8PTTYxtptL//4Ok/BHl924FvZaGw430XJdm2ZROf/dilbN+Sff+gYDDIlZ+/mo9d9YWsM5fBIuEAc6siU9ZncKiIloaIloZIpT16EmniyTSJlEcy7ZH2L4LzPHC4nG3no7Wn7w8as0yTUChglASDREoCREtDRTEsdyKqy8JUlARpiSVo700UXfPbG93M/K0qYkcffTT33XffwPQrrxy4pdNbT83+VvXii5BIZK4POpj9Tyf7yR3ZBc86L8muHev41GUX0tXZkbVsdt1cvnHDLZx0ylsH5plBaShAaShIWUmQaGmo6Dt0i10oGKC6LKBAHYdQMMD86gjzqyPEk2n6U5kQ3X+rl4D5FxKaETTDDAL+fDPDIOvMTE2chaNAKLDjhjwR57nnnht4P38+LFjosacxEwyJhPHii8ObkgZLpDziSY+WJuO3D2YfdI474Wk+cfH59PX2ZM0/dtWb+dZNd7Bg4SKqy8JURjIH/mIc1ilvbJFwsKiuO3mjUx9CgZ100klZ0+vXr2fwNXhvPjH7FPnpUR4xtr+56Gc/LskaajpvQSff/vp7hoXBez9wET+8Zy3HrqznqPmVLJlVTk15icJAREalQCiwlStXUllZOTDd3t6edYGa350w4PEhT6EaqjueIp2Ge/87u7moae9XSSayhwN+4n//H665bg1HL50z4Y4/EXnj0hGjwAKBACcOeRza+vXrB96/88zsXf773+fudATw/Ifh/OH3IRp3Df5cL87dmlX281/+Jz539T+wYm6UaKlaAkVk/BQIk6BhSKfAE088MfD+1FOMSNmBBGhsNLZsyb2eWCLzMJy7bx/a6/wjoAPIdKh95drv8NdXfob6ORVqjxWRCVMgTIK3v/3tWdO//e1vB96XlMBJb8m+QO3RR3Ovp6svyZ7dxmO/HfqNP3ObqFAoxLXX/4ALL72cRTVlGjEkInlRIEyCM844I2so3Msvv0xzc/Og5dnlf/Ob4etwztHVl+LHt4WHPPP4OWAdpaURvvOD/+acv/wANeVhaitGGbsqIjIKBcIkqK2tHdaP8NBDDw28P/s92eOmH3jADXsWTU8iTVdXgjtuGnpzsf+kIlrJDXfcy9vfdTbBgLFAtwQQkQJQIEySs846K2v63nvvHXj/ttMD1M460I/Q3m7DRhvtae3kry64mURi8BOQOqiueZAf/Ph/aDj1dAAWVEc0mkhECkJHkklywQUXZE0/8MADdHdnHukXCsHZ52T3I9x//4H37e0dXHLB+bz2yplZZcrK7+aWe+/hmFUnZKZLgmoqEpGCUSBMkpNOOolly5YNTMfjce68886B6fe/L7v83d9pJGVhvMpKfnX4CnY/WQFkX7Rw3c1vZ8URRw1Mq6lIRApJgTBJzIwPfehDWfOuu+460unMoxjfe16Q8tIDj8RsdAv5JecRiMV4f1sby/hq1mdPe3uMU05fODBdVRaiQtcbiEgBKRAm0ZVXXpl1l9GNGzdyyy23AFCxdwuXpm7LKn8NV+OAn/AhnuKtWcs+87fZ65439CHqIiJ5UiBMosWLF3PxxRdnzfvCF76QeZLaN7/JFXZj1rInOY2ruJ6rhjx++oz3JDn2+AMPea8pD+sCNBEpOHNF/KDThoYGN/i2DzPRjh07OPLII4nHDzw+sLa2lsaeHiKJBO/jZ/yc9434+VLi3PtokqX1mU5oMzhiXuWkPxRFRGYmM3vGOXeQeyiPTEeVSbZ06VKuueaarHnt7e2UJDLXF1zL31LKyM+a/Vf+biAMAGZHSxQGIjIpCnJkMbNzzOw1M9tsZlfnWG5mdp2//EUzOzHXeg5Vn/nMZ1i9enXWvG7/55H8iR/yUQKkh33uSv6Tz1TcNDAdDBh10dLJrKqIvIHlHQhmFgS+B5wLHANcYmbHDCl2LrDSf60Gbsh3uzOJmXHjjTfyjW98g2g0CsAdwP5rkC/hRzzCmZzFQyygkZN5ilv5CN8Nfo6OC//XwHrmVZXqIjQRmTR59yGY2WnA15xzf+ZP/18A59zXB5X5PvCIc+4uf/o14Ezn3J6DrftQ6EMYqr29nQceeIDmJ5/kyhtvpGToPSsG8crK2fTQEySW11NWEmRFXYUeFygiBzXdfQiLgJ2Dpnf588Zb5g2htraWSy+9lM9edx0lP/85lJdDOPvRmF4ojFdWzuvfv5XE8noCAVhcW6YwEJFJVYhAyHWUGnraMZYymYJmq81svZmtH3yH0EPSuefCiy/C6tVQVQWBAFRVEf/oX7PpoSeIvfMszGDprHINMxWRSVeIS113AUsGTS8GGidQBgDn3BpgDWSajApQv+K2YgVcf33m5SsHFsSTxBNpqsvDeh6yiEyJQpwhrANWmlm9mZUAFwP3DylzP/ARf7TRqUDnaP0Hb3RVkTBzqyIKAxGZMnmfITjnUmZ2FfArIAjc7JzbYGZX+MtvBNYC5wGbgV7go/luV0RECqsgd0dzzq0lc9AfPO/GQe8d8OlCbEtERCaHBrWLiAigQBAREZ8CQUREAAWCiIj4FAgiIgIoEERExKdAEBERQIEgIiI+BYKIiAAKBBER8SkQREQEUCCIiIhPgSAiIoACQUREfAoEEREBFAgiIuJTIIiICKBAEBERnwJBREQABYKIiPgUCCIiAigQRETEp0AQEREAQvl82MxmAT8GlgPbgYucc+05ym0HuoE0kHLONeSzXRERKbx8zxCuBn7jnFsJ/MafHsk7nXMnKAxERIpTvoFwPnCr//5W4H15rk9ERKZJvoEwzzm3B8D/OXeEcg54yMyeMbPVB1uhma02s/Vmtr65uTnP6omIyFiN2odgZr8G5udY9OVxbOd051yjmc0FHjazV51zj+Yq6JxbA6wBaGhocOPYhoiI5GHUQHDOvWekZWa2z8wWOOf2mNkCoGmEdTT6P5vM7GfAyUDOQBARkemRb5PR/cDl/vvLgZ8PLWBmFWZWuf89cDbwcp7bFRGRAss3EK4BzjKzTcBZ/jRmttDM1vpl5gGPm9kLwNPAL51zD+a5XRERKbC8rkNwzrUC784xvxE4z3+/FTg+n+2IiMjk05XKIiICKBBERMSnQBAREUCBICIiPgWCiIgACgQREfEpEEREBFAgiIiIT4EgIiKAAkFERHwKBBERARQIIiLiUyCIiAigQBAREZ8CQUREAAWCiIj4FAgiIgIoEERExKdAEBERQIEgIiI+BYKIiAAKBBER8eUVCGb2QTPbYGaemTUcpNw5ZvaamW02s6vz2aaIiEyOfM8QXgY+ADw6UgEzCwLfA84FjgEuMbNj8tyuiIgUWCifDzvnNgKY2cGKnQxsds5t9cv+CDgfeCWfbYuISGFNRR/CImDnoOld/ryczGy1ma03s/XNzc2TXjkREckY9QzBzH4NzM+x6MvOuZ+PYRu5Th/cSIWdc2uANQANDQ0jlhMRkcIaNRCcc+/Jcxu7gCWDphcDjXmuU0RECmwqmozWASvNrN7MSoCLgfunYLsiIjIO+Q47fb+Z7QJOA35pZr/y5y80s7UAzrkUcBXwK2AjcLdzbkN+1RYRkULLd5TRz4Cf5ZjfCJw3aHotsDafbYmIyOTSlcoiIgIoEERExKdAEBERQIEgIiI+BYKIiAAKBBER8SkQREQEUCCIiIhPgSAiIoACQUREfAoEEREBFAgiIuJTIIiICKBAEBERnwJBREQABYKIiPgUCCIiAigQRETEp0AQERFAgSAiIj4FgoiIAAoEERHx5RUIZvZBM9tgZp6ZNRyk3HYze8nMnjez9flsU0REJkcoz8+/DHwA+P4Yyr7TOdeS5/ZERGSS5BUIzrmNAGZWmNqIiMi0yfcMYawc8JCZOeD7zrk1IxU0s9XAan+y38xenooK5mEOMBPOfFTPwlI9C0v1LJwjJ/rBUQPBzH4NzM+x6MvOuZ+PcTunO+cazWwu8LCZveqcezRXQT8s1vjbXu+cG7FvohjMhDqC6lloqmdhqZ6Fk08/7aiB4Jx7z0RXPmgdjf7PJjP7GXAykDMQRERkekz6sFMzqzCzyv3vgbPJdEaLiEgRyXfY6fvNbBdwGvBLM/uVP3+hma31i80DHjezF4CngV865x4c4yZG7GsoIjOhjqB6FprqWViqZ+FMuI7mnCtkRUREZIbSlcoiIgIoEERExDftgWBm55jZa2a22cyuzrHczOw6f/mLZnZikdbzTDPr9G/P8byZfWUa6nizmTWNdO1GEe3L0eo57fvSr8cSM/udmW30b9Hy2Rxlpn2fjrGe07pPzSxiZk+b2Qt+Hf8xR5li2JdjqWdR/H76dQma2XNm9oscy8a/P51z0/YCgsAW4DCgBHgBOGZImfOABwADTgWeKtJ6ngn8Ypr35xnAicDLIyyf9n05xnpO+77067EAONF/Xwn8qUh/P8dSz2ndp/7+ifrvw8BTwKlFuC/HUs+i+P306/IF4L9z1Wci+3O6zxBOBjY757Y65xLAj4Dzh5Q5H7jNZTwJ1JjZgiKs57RzmYv92g5SpBj25VjqWRScc3ucc8/677uBjcCiIcWmfZ+OsZ7Tyt8/MX8y7L+Gjmgphn05lnoWBTNbDPw5cNMIRca9P6c7EBYBOwdN72L4L/JYyky2sdbhNP9U8wEzO3ZqqjYuxbAvx6qo9qWZLQfeTOYb42BFtU8PUk+Y5n3qN288DzQBDzvninJfjqGeUBy/n98GvgR4Iywf9/6c7kDIdVe8oWk8ljKTbSx1eBZY5pw7HvgucN9kV2oCimFfjkVR7UsziwL3Ap9zznUNXZzjI9OyT0ep57TvU+dc2jl3ArAYONnMjhtSpCj25RjqOe370szeCzQ55545WLEc8w66P6c7EHYBSwZNLwYaJ1Bmso1aB+dc1/5TTefcWiBsZnOmropjUgz7clTFtC/NLEzmIHunc+6nOYoUxT4drZ7FtE+dcx3AI8A5QxYVxb7cb6R6Fsm+PB34SzPbTqYJ+11mdseQMuPen9MdCOuAlWZWb2YlwMXA/UPK3A98xO8xPxXodM7tKbZ6mtl8s8x9wM3sZDL7tnWK6zmaYtiXoyqWfenX4QfARufcf4xQbNr36VjqOd371MzqzKzGf18GvAd4dUixYtiXo9ZzuvclgHPu/zrnFjvnlpM5Hv3WOffhIcXGvT+n6vbXOTnnUmZ2FfArMiN5bnbObTCzK/zlNwJryfSWbwZ6gY8WaT0vBK40sxTQB1zs/K7+qWJmd5EZATHHMrcU+SqZTrGi2ZdjrOe070vf6cBlwEt+mzLA3wFLB9W1GPbpWOo53ft0AXCrmQXJHEDvds79otj+1sdYz+nelyPKd3/q1hUiIgJMf5ORiIgUCQWCiIgACgQREfEpEEREBFAgiIiIT4EgIiKAAkFERHz/Hw31xBiy8VJfAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "scaler = preprocessing.StandardScaler().fit(y)\n",
    "yscaled= scaler.transform(y) \n",
    "# to keep the comparison similar to before, we will \n",
    "# also account for scaling to unit standard deviation\n",
    "# newer versions of scikit-learn can use the option with_std = False\n",
    "# but mine does not have this, and I do not want to update it right now\n",
    "\n",
    "# fit to transformed y data, then inverse_transform\n",
    "the_kernel = RBF(length_scale=0.1,length_scale_bounds=\"fixed\")\n",
    "the_model  = GaussianProcessRegressor(kernel=the_kernel,normalize_y=False)\n",
    "the_model.fit(x,yscaled)\n",
    "fmeanscaled,fstdscaled = the_model.predict(xs,return_std=True)\n",
    "fmean       = scaler.inverse_transform(fmeanscaled)\n",
    "mean_plus   = scaler.inverse_transform(fmeanscaled+ fstdscaled[:,None])\n",
    "mean_minus  = scaler.inverse_transform(fmeanscaled- fstdscaled[:,None])\n",
    "\n",
    "#plotting\n",
    "fig,axs = make_plot(Vs,Ps,x,y)\n",
    "make_plot_posterior(axs,fmean[:,0],mean_minus[:,0],mean_plus[:,0])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "That looks better! In the cell above, we show when building the `GaussianProcessRegressor` how you can specify whether your label should be normalized with the `normalize_y` option. Go ahead and add this flag with `True` to the cell where we unintentionally assumed a zero-mean prior and see how this now compares with the result just generated."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "wejgljPSrAYD"
   },
   "source": [
    "## Team Activity: Active Learning Challenge\n",
    "\n",
    "In this activity, we will deploy *active learning* to identify a molecule that fits some specific target physical property. In specific, we will be working from a pool of molecules that can be found in the ClinTox dataset, which includes a combination of drugs that have failed clinical trials for toxicity reasons as well as drugs that are assocated with successful trials. It is a commonly used dataset for binary classification, but here, we will simply use it as a source for interesting molecular structures. Here is a summary of the challenge:\n",
    "\n",
    "* Our \"design\" task will be to find a molecule that has a specific *boiling temperature*, $T_b$.\n",
    "* Predictions from `leruli` will represent the *ground truth* data on $T_b$ for any molecule\n",
    "* We will start with approximately 50 labeled chemical structures\n",
    "* Gaussian process regression (GPR) will be used as a surrogate model for predicting $T_b$ as a function of molecule chemistry\n",
    "* The molecule chemistry will be represented via chemical descriptors computed by `mordred`; these will be used as inputs for the GPR "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Pre-processing\n",
    "For the workshop, we have done a number of curation and pre-processing steps ahead of time. You can view code relevant to these steps below, but you need not run it. The most time-consuming portion is just running `mordred` to compute all the chemical descriptors for everything within the dataset. At a \"meta\" level, we also needed to exclude a number of chemical structures that were not processible by `leruli`. \n",
    "\n",
    "Relevant files generated pre-workshop:\n",
    "*\n",
    "*\n",
    "*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 434
    },
    "id": "N2lhlM-8yYa_",
    "outputId": "e1db4932-5c89-44a3-f0f4-740412c0395b",
    "tags": [
     "hide-input",
     "hide-output"
    ]
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[20:24:21] Explicit valence for atom # 0 N, 5, is greater than permitted\n",
      "[20:24:21] Can't kekulize mol.  Unkekulized atoms: 9\n",
      "[20:24:21] Explicit valence for atom # 10 N, 4, is greater than permitted\n",
      "[20:24:21] Explicit valence for atom # 10 N, 4, is greater than permitted\n",
      "[20:24:21] Can't kekulize mol.  Unkekulized atoms: 4\n",
      "[20:24:21] Can't kekulize mol.  Unkekulized atoms: 4\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "We initially extract 1478 convertible molecular structures from this dataset.\n"
     ]
    }
   ],
   "source": [
    "# download ClinTox from dmol-book\n",
    "# remove any structures that cannot be converted\n",
    "toxdata = pd.read_csv(\n",
    "    \"https://github.com/whitead/dmol-book/raw/master/data/clintox.csv.gz\"\n",
    ")\n",
    "toxdata.head()\n",
    "PT.AddMoleculeColumnToFrame(toxdata,smilesCol='smiles',includeFingerprints=False)\n",
    "toxdata= toxdata[~toxdata['ROMol'].isnull()] # removes any structures that failed to convert\n",
    "N = len(toxdata)\n",
    "display(PT.FrameToGridImage(toxdata.head(8), molsPerRow=4))\n",
    "toxdata = toxdata.reset_index()\n",
    "print(\"We initially extract {} convertible molecular structures from this dataset.\".format(N))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "qUGdl87_G8vt",
    "outputId": "541b6bd3-5b9a-4641-b85d-ed9f01951239",
    "tags": [
     "hide-output",
     "hide-input"
    ]
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "  2%|▏         | 24/1478 [00:16<28:23,  1.17s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.7/dist-packages/numpy/core/fromnumeric.py:86: RuntimeWarning: overflow encountered in reduce\n",
      "  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "  8%|▊         | 120/1478 [00:57<47:51,  2.11s/it]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.7/dist-packages/numpy/core/fromnumeric.py:86: RuntimeWarning: overflow encountered in reduce\n",
      "  return ufunc.reduce(obj, axis, dtype, out, **passkwargs)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 1478/1478 [17:12<00:00,  1.43it/s]\n"
     ]
    }
   ],
   "source": [
    "calculator = Calculator(descriptors,ignore_3D=True)\n",
    "wdesc      = calculator.pandas(toxdata['ROMol'])\n",
    "# the below will prune away any descriptors that did not have valid calculations\n",
    "missing = []\n",
    "for column in wdesc.columns:\n",
    "    if (wdesc[column].apply(lambda x: type(x) == Missing)).any():\n",
    "        missing.append(column)\n",
    "wdesc = wdesc.drop(missing,axis=1)\n",
    "wdesc.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "After computing descriptors from Mordred and immediately discarding any descriptors that gave *any* molecule trouble. This takes us from ~1500 descriptors down to around 600. We then further reduce the dimensionality of our prospective inputs by applying versions of a low-variance and high-correlation filters. This leaves us with about 250 descriptors for each molecule, which we write to `filtered.csv` "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "5MkLkRn7SbLE",
    "outputId": "a8eeeeda-6c42-42a6-83ed-55bbee409e3e",
    "tags": [
     "hide-input",
     "remove-output"
    ]
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1478, 599)\n",
      "(1478, 485)\n"
     ]
    }
   ],
   "source": [
    "wdesc2 = wdesc.copy(deep=True)\n",
    "\n",
    "# low variance filter\n",
    "low_var = []\n",
    "for column in wdesc2.columns:\n",
    "  var = wdesc2[column].var()\n",
    "  if (var < 1e-5):\n",
    "    low_var.append(column)\n",
    "  else:\n",
    "    mu = wdesc2[column].mean()\n",
    "    wdesc2[column] = (wdesc2[column]-mu)/var \n",
    "wdesc2 = wdesc2.drop(low_var,axis=1)\n",
    "\n",
    "# greedy high correlation filter\n",
    "corr = wdesc2.corr().to_numpy()\n",
    "np.fill_diagonal(corr,0.0)\n",
    "X = wdesc2.to_numpy()\n",
    "import random\n",
    "random.seed(0)\n",
    "cid = list(range(X.shape[1]))\n",
    "random.shuffle(cid)\n",
    "too_corr = []\n",
    "r_max = 0.9\n",
    "keep = []\n",
    "while cid:\n",
    "  i  = cid.pop(0)\n",
    "  keep.append(i)\n",
    "  corr_i     = corr[i,:]\n",
    "  too_corr_i = np.argwhere(np.abs(corr_i) >= 0.9)\n",
    "  for j in too_corr_i:\n",
    "    try:\n",
    "      too_corr.append(cid.pop(cid.index(j)))\n",
    "    except ValueError:\n",
    "      pass\n",
    "\n",
    "wdesc2 = wdesc2.drop(wdesc2.columns[too_corr],axis=1)\n",
    "wdesc2.to_csv(\"filtered.csv\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Using leruli\n",
    "In active learning, we are typically making measurements iteratively. To mimic taking measurements, we will make calls to `leruli` to grab values of $$T_b$$, which we will treat as the \"ground truth\" label for any given molecule. Examine and run the cell below to understand how to query `leruli` for a physical property using a SMILES representation of the molecular graph. We will use the boiling point as the property; note that the units returned from `leruli` are in Celsius."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "rkGyCLkCO9NK",
    "outputId": "213b2c25-ce25-49ce-ec22-5aac548f0054"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "We now have 1376 molecules\n",
      "Here are some boiling points for some molecules:\n",
      "For molecule C(=O)[C@H](CCCCNC(=O)OCCOC)NC(=O)OCCOC\n",
      "  Tb = 537.0 K\n",
      "\n",
      "For molecule [C@@H]1([C@@H]([C@@H]([C@H]([C@@H]([C@@H]1Cl)Cl)Cl)Cl)Cl)Cl\n",
      "  Tb = 509.5 K\n",
      "\n",
      "For molecule [C@H]([C@@H]([C@@H](C(=O)[O-])O)O)([C@H](C(=O)[O-])O)O\n",
      "  Tb = 587.2 K\n",
      "\n",
      "For molecule [H]/[NH+]=C(/C1=CC(=O)/C(=C\\C=c2ccc(=C([NH3+])N)cc2)/C=C1)\\N\n",
      "  Tb = 631.7 K\n",
      "\n",
      "For molecule [H]/[NH+]=C(\\N)/c1ccc(cc1)OCCCCCOc2ccc(cc2)/C(=[NH+]/[H])/N\n",
      "  Tb = 628.8 K\n",
      "\n",
      "For molecule [N+](=O)([O-])[O-]\n",
      "  Tb = 351.3 K\n",
      "\n",
      "For molecule [N]=O\n",
      "  Tb = 298.2 K\n",
      "\n",
      "For molecule [O-]P(=O)([O-])F\n",
      "  Tb = 352.1 K\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import leruli\n",
    "\n",
    "# load in csv with smiles column\n",
    "path2git=\\\n",
    "\"https://raw.githubusercontent.com/webbtheosim/ml-workshop-acsmarm2022/main/site/source/20220603-applied/\"\n",
    "curtox = pd.read_csv(\n",
    "    path2git + \"curated_clintox_smiles.csv\"\n",
    ")[['smiles']]\n",
    "N   = curtox.shape[0]\n",
    "print(\"We now have {} molecules\".format(N))\n",
    "\n",
    "# use leruli to \"measure\" boiling points for a subset\n",
    "m = 8\n",
    "subset = curtox.iloc[0:m,:].copy()\n",
    "PT.AddMoleculeColumnToFrame(subset,smilesCol='smiles',includeFingerprints=False)\n",
    "Tbs = [-1000 for i in range(m)]\n",
    "print(\"Here are some boiling points for some molecules:\")\n",
    "for i,smi in enumerate(subset['smiles'][:]):\n",
    "    Tbs[i] = leruli.graph_to_boiling_point(smi)['bp']+273.15\n",
    "    print(\"For molecule {}\\n  Tb = {:>5.1f} K\\n\".format(smi,Tbs[i]))\n",
    "\n",
    "subset['Tb'] = Tbs\n",
    "display(PT.FrameToGridImage(subset, legendsCol='Tb', molsPerRow=4))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### GPR Kernel\n",
    "\n",
    "Because the mathematics underlying GPR are pretty linear (in a literal sense), perhaps the most critical decision that one makes is the choice of kernel, which describes the covariance amongst random variables. The kernel and its parameters are the *hyperparameters* for GPR.\n",
    "\n",
    "In the active learning paradigm, we will be building potentially many models, so we will write a function that we can use to re-initialize a fresh kernel each time. Familiarize yourself with and run the cell below to implement a kernel of the form\n",
    "\n",
    "$$k(x_i,x_j) = C \\exp \\left[-\\frac{d(x_i,x_j)^2}{2L^2} \\right] + N$$\n",
    "\n",
    "Otherwise, examine the doc pages to implement a different kind of kernel. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [],
   "source": [
    "from scipy.spatial.distance     import pdist,cdist\n",
    "from sklearn.gaussian_process.kernels import RBF, WhiteKernel, ConstantKernel\n",
    "from scipy.optimize             import minimize, minimize_scalar\n",
    "from sklearn.gaussian_process   import GaussianProcessRegressor\n",
    "from scipy.special import erf\n",
    "from sklearn.model_selection  import train_test_split, KFold\n",
    "from sklearn.metrics     import r2_score, mean_squared_error,mean_absolute_error\n",
    "import seaborn as sns\n",
    "import warnings\n",
    "from rdkit import Chem\n",
    "warnings.filterwarnings(\"ignore\")\n",
    "def build_kernel(params):\n",
    "  [C,N,L] = [params[key] for key in ['const','noise','length']]\n",
    "  the_kernel =\\\n",
    "     ConstantKernel(constant_value=C)\\\n",
    "         * RBF(length_scale=L) \\\n",
    "         + WhiteKernel(noise_level=N,noise_level_bounds=(1e-10,1))\n",
    "  return the_kernel"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###  Acquisition functions\n",
    "In active learning, we define an acquisition function that enables us to identify the next \"best\" measurement; the notion of best is obviously subject to change based on the choice of acquisition function. In the cell below, we are going to define to write code to compute two different acquisition functions that we discussed, the **upper confidence bound** and **expected improvement** acquisition functions.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [],
   "source": [
    "#==================================================================\n",
    "#  AUX: eval_UCB\n",
    "#==================================================================\n",
    "# T = target function value\n",
    "# M = mean of model evaluated at x\n",
    "# S = standard deviation of model evaluated at X\n",
    "# E = weighting parameter\n",
    "def eval_UCB(T,M,S,E=0.5):\n",
    "  UCB = M + S*E\n",
    "  return UCB\n",
    "\n",
    "#==================================================================\n",
    "#  AUX: eval_EI\n",
    "#==================================================================\n",
    "# T = target function value\n",
    "# M = mean of model evaluated at x\n",
    "# S = standard deviation of model evaluated at X\n",
    "# E = Xi parameter\n",
    "# cumNrmDist is the cumulative unit normal distribution\n",
    "# NrmDist is the standard normal probability distribution\n",
    "def eval_EI(T,M,S,E=0.01):\n",
    "  dmuT      = M - T - E\n",
    "  dmuTbyS   = dmuT / S\n",
    "  cumNrmDist= 0.5*(1. + erf(dmuTbyS/np.sqrt(2.)))\n",
    "  NrmDist   = np.exp(-0.5*dmuTbyS**2.0)/np.sqrt(2*np.pi)\n",
    "  EI        = dmuT * cumNrmDist + S * NrmDist\n",
    "  return EI"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Data Preparation and Target Definition\n",
    "Examine, modify, and run the cells below to prepare for our challenge! Our goal will be to find a molecule that has a boiling temperature close to 250 K. \n",
    "\n",
    "Critically, we are loading a .csv that has already measured ~50 boiling temperatures for some randomly selected molecules in the ClinTox dataset. In the .csv, points that are labeled with \"-1000\" are currently unknown. \n",
    "\n",
    "Write some code to extract *only the measured data points* and examine how they are distributed. Are there any data points that are currently close to our target?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'numpy.ndarray' object has no attribute 'deepcopy'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[0;32m/var/folders/nj/dk1gj0wx7js4pk_4d5v_jyyh0000gp/T/ipykernel_77296/1588921381.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0my\u001b[0m  \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpath2git\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m\"curated_clintox_Tb_0.csv\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_numpy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;31m# array of Tb\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0mX\u001b[0m  \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpath2git\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m\"curated_clintox_features.csv\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_numpy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m      \u001b[0;31m# array of descriptors\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0myinit\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdeepcopy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0mXinit\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdeepcopy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mAttributeError\u001b[0m: 'numpy.ndarray' object has no attribute 'deepcopy'"
     ]
    }
   ],
   "source": [
    "# define our target\n",
    "target = 235  # desired boiling temperature in K\n",
    "Xi     = 0.5  # weighting parameter, if desired, for use in acquisition functions\n",
    "\n",
    "# load data\n",
    "y  = pd.read_csv(path2git + \"curated_clintox_Tb_0.csv\").to_numpy()[:,-1][:,None] # array of Tb\n",
    "X  = pd.read_csv(path2git + \"curated_clintox_features.csv\").to_numpy()[:,:]      # array of descriptors\n",
    "yinit = y.deepcopy()\n",
    "Xinit = X.deepcopy()\n",
    "\n",
    "# get scaler for features, X\n",
    "# because our pool of molecules is known a priori and unchanging\n",
    "# we will perform our transformation of input features in consideration\n",
    "# of the whole space -- usually you would just use the training data,\n",
    "# but I do not really see a problem with using all the structures here\n",
    "Xscaler    = preprocessing.StandardScaler().fit(X)\n",
    "X_sc       = Xscaler.transform(X)\n",
    "\n",
    "# find indices with unmeasured boiling points\n",
    "nodata = np.squeeze(y)<0.0\n",
    "\n",
    "# plot distribution of measured boiling temperatures\n",
    "sns.distplot(y[~nodata,:])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Active learning loop\n",
    "In the cell below, we have set up a framework for conducting the active learning exercise. \n",
    "\n",
    "Examine and complete the cell below. While testing you may want to replace the `while` loop with a `for` loop that can only execute one or two times. \n",
    "\n",
    "Are you able to find a suitable target? What fraction of the pool is explored to find this target?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are currently 50 labeled samples\n",
      "Current closest value to target is 331.2\n",
      "For molecule C(C(CS)S)O\n",
      "  Tb = 443.9 K\n",
      "\n",
      "There are currently 51 labeled samples\n",
      "Current closest value to target is 331.2\n",
      "For molecule CS(=O)C\n",
      "  Tb = 462.2 K\n",
      "\n",
      "There are currently 52 labeled samples\n",
      "Current closest value to target is 331.2\n",
      "For molecule C([C@@H](C(=O)[O-])[NH3+])S\n",
      "  Tb = 407.4 K\n",
      "\n",
      "There are currently 53 labeled samples\n",
      "Current closest value to target is 331.2\n",
      "For molecule [N]=O\n",
      "  Tb = 298.2 K\n",
      "\n",
      "There are currently 54 labeled samples\n",
      "Current closest value to target is 298.2\n",
      "For molecule [Se]\n",
      "  Tb = 321.1 K\n",
      "\n",
      "There are currently 55 labeled samples\n",
      "Current closest value to target is 298.2\n",
      "For molecule N(=O)[O-]\n",
      "  Tb = 311.2 K\n",
      "\n",
      "There are currently 56 labeled samples\n",
      "Current closest value to target is 298.2\n",
      "For molecule Cl[Cu]Cl\n",
      "  Tb = 392.0 K\n",
      "\n",
      "There are currently 57 labeled samples\n",
      "Current closest value to target is 298.2\n",
      "For molecule C#N\n",
      "  Tb = 298.8 K\n",
      "\n",
      "There are currently 58 labeled samples\n",
      "Current closest value to target is 298.2\n",
      "For molecule [N+](=O)([O-])[O-]\n",
      "  Tb = 351.3 K\n",
      "\n",
      "There are currently 59 labeled samples\n",
      "Current closest value to target is 298.2\n",
      "For molecule C(=C(F)F)(F)F\n",
      "  Tb = 197.4 K\n",
      "\n",
      "There are currently 60 labeled samples\n",
      "Current closest value to target is 197.4\n",
      "For molecule C(C(F)(F)F)(C(F)(F)F)(F)F\n",
      "  Tb = 236.6 K\n",
      "\n",
      "There are currently 61 labeled samples\n",
      "Current closest value to target is 236.6\n",
      "\n",
      "\n",
      "We have found a molecule!\n",
      "The boiling point of the best found match is 236.6\n",
      "Here we have it:\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<rdkit.Chem.rdchem.Mol at 0x7facf31781c0>"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# best to re-load data in this cell\n",
    "y  = pd.read_csv(path2git + \"curated_clintox_Tb_0.csv\").to_numpy()[:,-1][:,None] # array of Tb\n",
    "X  = pd.read_csv(path2git + \"curated_clintox_features.csv\").to_numpy()[:,:]      # array of descriptors\n",
    "\n",
    "# find indices with unmeasured boiling points\n",
    "nodata = np.squeeze(y)<0.0\n",
    "\n",
    "niter = 0\n",
    "while nodata.any():\n",
    "#for jj in range(1):\n",
    "\n",
    "    # extract the training data from 'X' and 'y' above\n",
    "    X0     = X[~nodata,:].copy()\n",
    "    y0     = y[~nodata,:].copy()\n",
    "    ibest  = np.argmin((y0-target)**2)\n",
    "    ybest  = y0[ibest][0]\n",
    "    print(\"There are currently {} labeled samples\".format(len(y0)))\n",
    "    print(\"Current closest value to target is {:>5.1f}\".format(ybest))\n",
    "    \n",
    "    # increment counter and check convergence\n",
    "    niter += 1\n",
    "    conv   = 100*np.abs(ybest-target)/target < 1. # setup something to determine convergence\n",
    "    if (conv):\n",
    "        print(\"\\n\\nWe have found a molecule!\")\n",
    "        break\n",
    "    elif niter >= 50:\n",
    "        print(\"We have not found a molecule!\")\n",
    "        print(\"Consider a different target, acquisition function, or loosening convergence criterion\")\n",
    "        break    \n",
    "    \n",
    "    # perform data transformation and feature scaling on labels\n",
    "    # you should only scale the labels with the values in y0\n",
    "    X0_sc    = Xscaler.transform(X0)     # the Xscaler was defined earlier\n",
    "    yscaler  = preprocessing.StandardScaler().fit(y0)\n",
    "    y0_sc    = yscaler.transform(y0)\n",
    "    T_sc     = yscaler.transform([[target]])[0] # this is the transformed value of our target\n",
    "    \n",
    "    # build a GPR surrogate model\n",
    "    the_kernel = build_kernel({'const': 1.0, 'length' : 20, 'noise': .05}) \n",
    "    the_model  = GaussianProcessRegressor(kernel=the_kernel,n_restarts_optimizer=10)\n",
    "    \n",
    "    # train the model with our known data\n",
    "    the_model.fit(X0_sc,y0_sc)\n",
    "\n",
    "    # make predictions (we can just do over the whole dataset for simplicity)\n",
    "    yhat_sc_mean,yhat_sc_std = the_model.predict(Xscaler.transform(X),return_std=True)\n",
    "    yhat_mean   = yscaler.inverse_transform(yhat_sc_mean[:,0])\n",
    "    mean_plus   = yscaler.inverse_transform(yhat_sc_mean[:,0]+ yhat_sc_std)\n",
    "    mean_minus  = yscaler.inverse_transform(yhat_sc_mean[:,0]- yhat_sc_std)\n",
    "\n",
    "    # compute acquisition function for all unlabeled data points\n",
    "    acq  = -1.0*np.ones(len(y))\n",
    "    T    = 1./(yscaler.transform([[ybest]])[0] - T_sc)**2\n",
    "    for i,flag in enumerate(nodata):\n",
    "        if flag:\n",
    "            M  = 1./(yhat_sc_mean[i]-T_sc)**2\n",
    "            S  = 2*yhat_sc_std[i]/(yhat_sc_mean[i]-T_sc)**3\n",
    "            acq[i] = eval_EI(T,M,S,0.01)\n",
    "            #acq[i] = eval_UCB(T,M,S,1.0)\n",
    "            \n",
    "    # select new point for measurement/query\n",
    "    inew = np.argmax(acq)\n",
    "    nodata[inew] = False\n",
    "    \n",
    "    # get value with leruli\n",
    "    smi = curtox.loc[inew,'smiles']\n",
    "    y[inew] = leruli.graph_to_boiling_point(smi)['bp']+273.15\n",
    "    print(\"For molecule {}\\n  Tb = {:>5.1f} K\\n\".format(smi,y[inew][0]))\n",
    "    \n",
    "ibest    = np.argmin((y-ybest)**2)\n",
    "the_best = Chem.MolFromSmiles(curtox.loc[ibest,'smiles'])\n",
    "print(\"The boiling point of the best found match is {:>5.1f}\".format(y[ibest][0]))\n",
    "print(\"Here we have it:\")\n",
    "the_best"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Performance of the GPR model during active learning\n",
    "\n",
    "One thing that may be sometimes surprising is that the accuracy of models during active learning campaigns may actually be somewhat low, and yet our targets are still achieved. In such scenarios, we consider the value of the surrogate model to be predictive *enough* to point us in the right direction. Another thing to consider during active learning is that our training set is *heavily* biased. Should we even expect it to generalize well? When might we?\n",
    "\n",
    "If you have extra time in the workshop (or after), you might consider actually assessing how well GPR does in predicting $T_b$ for dataset. You can do this with the small amount of data given or perhaps acquire more data using `leruli`. For reference, we have trained models and assessed their performance using 5-fold cross-validation using the same kernel choice as earlier. The output is shown below for reference and should give you some sense of the type of accuracy that can be achieved. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "alzUTkXNQPan",
    "outputId": "f53c653e-71f2-4b9b-f7b0-fdc558c27d42",
    "tags": [
     "remove-input"
    ]
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.85011669 0.88614936 0.80833342 0.84293131 0.80548622]\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from scipy.spatial.distance     import pdist,cdist,squareform\n",
    "from sklearn.gaussian_process.kernels import RBF, WhiteKernel, Matern,ConstantKernel\n",
    "from scipy.optimize             import minimize, minimize_scalar\n",
    "from sklearn.gaussian_process   import GaussianProcessRegressor\n",
    "from scipy.special import erf\n",
    "from sklearn.model_selection  import train_test_split, KFold\n",
    "from sklearn.metrics     import r2_score, mean_squared_error,mean_absolute_error\n",
    "\n",
    "# We will estimate the model accuracy using cross-validation\n",
    "k     = 5\n",
    "kf    = KFold(n_splits=k,shuffle=True,random_state=1)\n",
    "r2s   = np.zeros([k])\n",
    "mses  = np.zeros([k])\n",
    "maes  = np.zeros([k])\n",
    "\n",
    "fig,axs = plt.subplots()\n",
    "colors =  plt.cm.Accent([i for i in range(k)])\n",
    "for i,(iTrain,iTest) in enumerate(kf.split(y)):\n",
    "    Xi_tr = X[iTrain]\n",
    "    Xi_te = X[iTest]\n",
    "    yi_tr = y[iTrain]\n",
    "    yi_te = y[iTest]\n",
    "    the_kernel = build_kernel({'const': 1.0, 'length' : 1e-3, 'noise': .05}) #,length_scale_bounds=\"fixed\")\n",
    "    the_model  = GaussianProcessRegressor(kernel=the_kernel)\n",
    "    Xscaler    = preprocessing.StandardScaler().fit(Xi_tr)\n",
    "    yscaler    = preprocessing.StandardScaler().fit(yi_tr)\n",
    "    X_sc       = Xscaler.transform(Xi_tr)\n",
    "    y_sc       = yscaler.transform(yi_tr)\n",
    "    the_model.fit(X_sc,y_sc)\n",
    "    yhat_sc_mean,yhat_sc_std = the_model.predict(Xscaler.transform(Xi_te),return_std=True)\n",
    "    \n",
    "    \n",
    "    yhat_mean   = yscaler.inverse_transform(yhat_sc_mean[:,0])\n",
    "    mean_plus   = yscaler.inverse_transform(yhat_sc_mean[:,0]+ yhat_sc_std)\n",
    "    mean_minus  = yscaler.inverse_transform(yhat_sc_mean[:,0]- yhat_sc_std)\n",
    "    (r2s[i],mses[i],maes[i]) = \\\n",
    "    (r2_score(yi_te,yhat_mean),mean_squared_error(yi_te,yhat_mean),mean_absolute_error(yi_te,yhat_mean))\n",
    "    plt.plot(yi_te,yhat_mean,marker='o',linestyle=\"\",markersize=8,color=colors[i],markeredgecolor='k',alpha=0.5)\n",
    "plt.xlim([100,800])\n",
    "plt.ylim([100,800])\n",
    "print(r2s)\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "celltoolbar": "Tags",
  "colab": {
   "collapsed_sections": [],
   "name": "day3.ipynb",
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
